[{"/Users/jessicadever/workspace/front_end/find-a-farmer/src/index.js":"1","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/Farms.js":"2","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/WelcomePage.js":"3","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/ApplicationViews.js":"4","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/header/HeaderCard.js":"5","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/auth/Register.js":"6","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/auth/Login.js":"7","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/FarmProvider.js":"8","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/FarmList.js":"9","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/FarmDetails.js":"10","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/FarmCard.js":"11","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/reviews/ReviewProvider.js":"12","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/reviews/ReviewForm.js":"13","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/users/UserProvider.js":"14","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/reviews/ReviewCard.js":"15","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/users/UserCard.js":"16","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/FarmFilter.js":"17"},{"size":326,"mtime":1611953826323,"results":"18","hashOfConfig":"19"},{"size":794,"mtime":1612456350555,"results":"20","hashOfConfig":"19"},{"size":501,"mtime":1612364742079,"results":"21","hashOfConfig":"19"},{"size":1140,"mtime":1612451857651,"results":"22","hashOfConfig":"19"},{"size":687,"mtime":1612451857655,"results":"23","hashOfConfig":"19"},{"size":3449,"mtime":1612364742082,"results":"24","hashOfConfig":"19"},{"size":2178,"mtime":1612451857652,"results":"25","hashOfConfig":"19"},{"size":890,"mtime":1612458287134,"results":"26","hashOfConfig":"19"},{"size":1040,"mtime":1612456924504,"results":"27","hashOfConfig":"19"},{"size":5757,"mtime":1612451857653,"results":"28","hashOfConfig":"19"},{"size":1430,"mtime":1612451857653,"results":"29","hashOfConfig":"19"},{"size":1029,"mtime":1612451857656,"results":"30","hashOfConfig":"19"},{"size":3991,"mtime":1612459512166,"results":"31","hashOfConfig":"19"},{"size":489,"mtime":1612364742094,"results":"32","hashOfConfig":"19"},{"size":797,"mtime":1612451857655,"results":"33","hashOfConfig":"19"},{"size":463,"mtime":1612381117310,"results":"34","hashOfConfig":"19"},{"size":1047,"mtime":1612458154117,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1k554lk",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"43"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"43"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"43"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"43"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"43"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"43"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"43"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jessicadever/workspace/front_end/find-a-farmer/src/index.js",[],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/Farms.js",[],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/WelcomePage.js",["79"],"import React from \"react\"\nimport { Route } from \"react-router-dom\"\nimport { Register } from \"./auth/Register\"\nimport { HeaderCard } from \"./header/HeaderCard\"\nimport { Login } from \"./auth/Login\"\nimport \"./WelcomePage.css\"\n\nexport const WelcomePage = () => {\n    return (\n        <section className=\"welcome\">\n            <>\n\n                <Route path=\"/welcome\">\n                    <Register />\n                    <Login />\n                </Route>\n\n                </>\n        </section>\n    )\n}",["80","81"],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/ApplicationViews.js",["82","83"],"import React from \"react\"\nimport { Route } from \"react-router-dom\"\nimport { FarmProvider } from \"./farm/FarmProvider\"\nimport { FarmList } from \"./farm/FarmList\"\nimport { FarmDetail } from \"./farm/FarmDetails\"\nimport { HeaderCard } from \"./header/HeaderCard\"\nimport { ReviewProvider } from \"./reviews/ReviewProvider\"\nimport { ReviewForm } from \"./reviews/ReviewForm\"\nimport { UserProvider } from \"./users/UserProvider\"\nimport { UserCard } from \"./users/UserCard\"\n\nexport const ApplicationViews = () => {\n    \n    \n\n    return (\n        <>\n\n        <UserProvider>\n            <ReviewProvider>\n                <FarmProvider>\n                    <Route exact path=\"/farms/:userId(\\d+)\">\n                        \n                        <FarmList />\n                    </Route>\n                    <Route exact path=\"/farms/detail/:farmId(\\d+)\">\n                        <FarmDetail />\n                    </Route>\n                    <Route exact path=\"/reviews/create/:farmId(\\d+)\">\n                        <ReviewForm />\n                    </Route>\n                </FarmProvider>\n            </ReviewProvider>\n        </UserProvider>\n        </>\n    )\n}","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/header/HeaderCard.js",[],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/auth/Register.js",["84"],"import React, { useRef } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport \"./Login.css\"\n\nexport const Register = (props) => {\n    const firstName = useRef()\n    const lastName = useRef()\n    const email = useRef()\n    const verifyPassword = useRef()\n    const conflictDialog = useRef()\n    const history = useHistory()\n\n    const existingUserCheck = () => {\n        return fetch(`http://localhost:8014/users?email=${email.current.value}`)\n            .then(res => res.json())\n            .then(user => !!user.length)\n    }\n\n    const handleRegister = (e) => {\n        e.preventDefault()\n\n        existingUserCheck()\n            .then((userExists) => {\n                if (!userExists) {\n                    fetch(\"http://localhost:8014/users\", {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"application/json\"\n                        },\n                        body: JSON.stringify({\n                            email: email.current.value,\n                            name: `${firstName.current.value} ${lastName.current.value}`\n                        })\n                    })\n                    .then(res => res.json())\n                    .then(createdUser => {\n                        if (createdUser.hasOwnProperty(\"id\")) {\n                            localStorage.setItem(\"find-a-farm_user\", createdUser.id)\n                            history.push(\"/farms\")\n                        }\n                    })\n                }\n                else {\n                    conflictDialog.current.showModal()\n                }\n            })\n    }\n\n    return (\n        <section className=\"container--register\" style={{ textAlign: \"center\" }}>\n\n            <dialog className=\"dialog dialog--password\" ref={conflictDialog}>\n                <div>Account with that email address already exists</div>\n                <button className=\"button--close\" onClick={e => conflictDialog.current.close()}>Close</button>\n            </dialog>\n\n            <form className=\"form--login\" onSubmit={handleRegister}>\n                <section className=\"reg\">\n                <h2 className=\"h3 mb-3 font-weight-normal\">Get Started</h2>\n                    <section className=\"form--reg\">\n                        <fieldset>\n                            <label htmlFor=\"firstName\"> First Name </label>\n                            <input ref={firstName} type=\"text\" name=\"firstName\" className=\"form-control form-name\" placeholder=\"First name\" required autoFocus />\n                        </fieldset>\n                        <fieldset>\n                            <label htmlFor=\"lastName\"> Last Name </label>\n                            <input ref={lastName} type=\"text\" name=\"lastName\" className=\"form-control form-name\" placeholder=\"Last name\" required />\n                        </fieldset>\n                        <fieldset>\n                            <label htmlFor=\"inputEmail\"> Email address </label>\n                            <input ref={email} type=\"email\" name=\"email\" className=\"form-control\" placeholder=\"Email address\" required />\n                        </fieldset>\n                        <fieldset className=\"loginBtnFieldset\">\n                            <button className=\"loginBtn\" type=\"submit\"> Log in </button>\n                        </fieldset>\n                    </section>\n                </section>\n            </form>\n        </section>\n    )\n}","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/auth/Login.js",["85"],"import React, { useRef } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport { Link } from \"react-router-dom\"\nimport \"./Login.css\"\n\nexport const Login = props => {\n    const email = useRef()\n    const password = useRef()\n    const existDialog = useRef()\n    const history = useHistory()\n\n    const existingUserCheck = () => {\n        return fetch (`http://localhost:8014/users?email=${email.current.value}`)\n        .then(res => res.json())\n        .then(user => user.length ? user[0] : false)\n    }\n\n    \n\n    const handleLogin = (e) => {\n        e.preventDefault()\n\n        existingUserCheck()\n            .then(exists => {\n                if (exists) {\n                    localStorage.setItem(\"find-a-farm_user\", exists.id)\n                    history.push(`/farms/${exists.id}`)\n                } else {\n                    existDialog.current.showModal()\n                }\n            })\n    }\n\n    return (\n        <section className=\"container--login\">\n            <dialog className=\"dialog dialog--auth\" ref={existDialog}>\n                <div>User does not exist</div>\n                <button className=\"button--close\" onClick={e => existDialog.current.close()}>Close</button>\n            </dialog>\n\n            <section className=\"userEntrance\">\n                <form className=\"form--login\" onSubmit={handleLogin}>\n                    <h2 className=\"form--heading\">Welcome Back!</h2>\n                    <fieldset>\n                        <label htmlFor=\"inputEmail\"> Email address </label>\n                        <input ref={email} type=\"email\"\n                            id=\"email\"\n                            className=\"form-control\"\n                            placeholder=\"Email address\"\n                            required autoFocus />\n                    </fieldset>\n                    <fieldset className=\"loginBtnFieldset\">\n                        <Link to={`/farms/${1}`}><button className=\"loginBtn\" type=\"submit\" id=\"userLogin\">\n                            Log in\n                            </button>\n                        </Link>\n                    </fieldset>\n                </form>\n            </section>\n        </section>\n    )\n}","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/FarmProvider.js",[],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/FarmList.js",["86","87","88"],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/FarmDetails.js",["89","90","91","92","93","94","95"],"import React, { useContext, useEffect, useState } from \"react\"\nimport { FarmContext, getFarmById } from \"./FarmProvider\"\nimport \"./Farm.css\"\nimport { useParams, useHistory } from \"react-router-dom\"\nimport { Link } from \"react-router-dom\"\nimport Pig from \"../images/Pig.png\"\nimport user from \"../images/user.png\"\nimport { ReviewContext, ReviewProvider } from \"../reviews/ReviewProvider\"\nimport { ReviewCard } from \"../reviews/ReviewCard\"\n\n\nexport const FarmDetail = () => {\n    const { getFarmById } = useContext(FarmContext)\n    const [ farm, setFarm ] = useState({})\n    const { reviews, getReviews } = useContext(ReviewContext)\n    const { farms, getFarms } = useContext(FarmContext)\n    const { farmId } = useParams()\n    const history = useHistory()\n\n\n    const currentFarmReviews = reviews.filter((currentReview) => {\n        return currentReview.farmId === parseInt(farmId)\n    } )\n\n    useEffect(() => {\n        console.log(\"useEffect\", farmId)\n        getFarmById(farmId)\n        .then((response) => {\n            setFarm(response)\n        })\n    }, [])\n\n    useEffect(() => {\n        getReviews().then(getFarms)\n    }, [])\n\n    if (farm.farmPic === \"\") {\n        let defaultFarmPic = Pig\n        farm.farmPic = defaultFarmPic\n    }\n\n    const userPic = user\n\n    return (\n        <section className=\"farm\">\n            <div className=\"farm__upperBox\">\n                <img src={farm.farmPic} alt=\"{farm.name} default pic\" className=\"farmPic\"></img>\n                <div className=\"farmCardRight\">   \n                    <section className=\"farm__info\">\n                        <h2 className=\"farm__name\">{farm.name}</h2>\n                        <div className=\"farm__street\">{farm.streetAddress}</div>\n                        <div className=\"farm__address\">{farm.city} {farm.state} {farm.zip}</div>\n                    </section>\n                </div>\n            </div>\n                <section className=\"farm__buttons\">\n                    <button className=\"farmDetailsBtn\"><Link className=\"a\" to={`/farms`}>Back to All Farms</Link></button>\n                    <button className=\"addReviewBtn\"><Link className=\"a\" to={`/reviews/create/${farm.id}`}>Add Review</Link></button>\n                </section>\n                        \n            <div>\n                <section className=\"farm__instructionAndLists\">\n                    <article className=\"farm__instructionsSection\">\n                        <h3>Instructions: </h3>\n                        <div className=\"farm__instructions\">{farm.instructions}</div>\n                    </article>\n                    <div className=\"farm__includeList\">\n                        <h3 className=\"farm__include\">Include</h3>\n                        <ul>\n                            <li>Vegetables*</li>\n                            <li>Fruit*</li>\n                            <li>Grains</li>\n                            <li>Nuts & Seeds</li>\n                            <li>Prepared Food</li>\n                            <li>Vegetables*</li>\n                            <li>Fruit*</li>\n                            <li>Grains</li>\n                            <li>Nuts & Seeds</li>\n                            <li>Prepared Food</li>\n                            <li>Vegetables*</li>\n                            <li>Fruit*</li>\n                            <li>Grains</li>\n                            <li>Nuts & Seeds</li>\n                            <li>Prepared Food</li>\n                        </ul>\n                        <p>*See exclusions</p>\n                    </div>\n                    <div className=\"farm__excludeList\">\n                        <h3 className=\"farm__exclude\">Exclude</h3>\n                        <ul>\n                            <li>Raw Meat</li>\n                            <li>Human Remains</li>\n                            <li>Food Stickers</li>\n                            <li>Plastic</li>\n                            <li>Canned Beans</li>\n                            <li>Avocado (all parts)</li>\n                            <li>Cherries</li>\n                            <li>Chocolate</li>\n                            <li>Kale</li>\n                            <li>Raw Meat</li>\n                            <li>Human Remains</li>\n                            <li>Food Stickers</li>\n                            <li>Plastic</li>\n                            <li>Canned Beans</li>\n                            <li>Avocado (all parts)</li>\n                            <li>Cherries</li>\n                            <li>Chocolate</li>\n                            <li>Kale</li>\n                        </ul>\n                    </div>\n                </section>\n                <article className=\"farm__reviews\">\n                    <h2 className=\"farm__reviewHeader\">Reviews</h2>\n                    <div>\n                        {\n                            currentFarmReviews.map(review => {\n                                \n                                return <ReviewCard key={review.id} farm={farm} review={review}/>\n                        })\n                        }\n                    </div>\n                </article>\n            </div>\n        </section>\n    )\n}\n\n/*\nSaving for farm__reviews, just in case:\n\n                    <div className=\"farm__reviewCard\">\n                        <img className=\"userDefaultPic\" src={userPic} alt=\"user default pic\"></img>\n                        <section className=\"farm__reviewInfo\">\n                            <h3 className=\"review__name\">{farm.review?.name}</h3>\n                            <div className=\"review__date\">{farm.review?.date}</div>\n                            <p className=\"review__reviewText\">{farm.review?.reviewText}</p>\n                        </section>\n                    </div>\n\n*/","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/FarmCard.js",["96","97"],"import React from \"react\"\nimport \"./Farm.css\"\nimport { Link } from \"react-router-dom\"\nimport {useHistory } from \"react-router-dom\"\n\nimport Pig from '../images/Pig.png'\nimport { ReviewContext } from \"../reviews/ReviewProvider\"\n\nexport const FarmCard = ( { farm, review } ) =>  {\n    if (farm.farmPic === \"\") {\n        let defaultFarmPic = Pig\n        farm.farmPic = defaultFarmPic\n    }\n\n    const history = useHistory()\n    \n    return (\n        <section className=\"farm\">\n            <div className=\"farm__upperBox\">\n                <img src={farm.farmPic} width=\"100\" height=\"100\" alt=\"{farm.name} default pic\" className=\"farmPic\"></img>\n                <div className=\"farmCardRight\">   \n                    <section className=\"farm__info\">\n                        <h2 className=\"farm__name\">{farm.name}</h2>\n                        <div className=\"farm__street\">{farm.streetAddress}</div>\n                        <div className=\"farm__address\">{farm.city} {farm.state} {farm.zip}</div>\n                    </section>\n                </div>\n            </div>\n            <section className=\"farm__buttons\">\n                <button className=\"farmDetailsBtn\"><Link to={`/farms/detail/${farm.id}`}>See Details</Link></button>\n                <Link to={`/reviews/create/${farm.id}`}>\n                    Add Review\n                </Link>\n            </section>\n        </section>\n    )\n\n}\n","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/reviews/ReviewProvider.js",["98"],"import React, { useState, createContext } from \"react\"\n\nexport const ReviewContext = createContext()\n\nexport const ReviewProvider = (props) => {\n    const [reviews, setReviews] = useState([])\n\n    const getReviews = () => {\n        return fetch(`http://localhost:8014/reviews?_embed=farm`)\n        .then(res => res.json())\n        .then(setReviews)\n    }\n\n    const addReview = reviewObj => {\n        return fetch(`http://localhost:8014/reviews?_expand=farm`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(reviewObj)\n        })\n        .then(response => response.json())\n    }\n\n    const getReviewById = (id) => {\n        return fetch (`http://localhost:8014/reviews/${id}?_expand=farm&_expand=user`)\n        .then(res => res.json())\n    }\n\n    return (\n        <ReviewContext.Provider value={{\n            reviews, getReviews, addReview\n        }}>\n            {props.children}\n        </ReviewContext.Provider>\n\n    )\n\n}","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/reviews/ReviewForm.js",["99","100"],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/users/UserProvider.js",[],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/reviews/ReviewCard.js",[],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/users/UserCard.js",["101"],"import React from \"react\"\nimport \"./User.css\"\nimport userPicDefault from \"../images/user.png\"\n\nexport const UserCard = ( { user }) => {\n\n    if (user.userPic === \"\") {\n        let defaultUserPic = userPicDefault\n        user.userPic = defaultUserPic\n    }\n\n    return (\n        <section className=\"userCard\">\n            <img src={user.userPic} alt=\"user profile picture\"></img>\n            <h3 className=\"userName\">{user.username}</h3>\n        </section>\n    )\n}","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/FarmFilter.js",["102","103"],{"ruleId":"104","severity":1,"message":"105","line":4,"column":10,"nodeType":"106","messageId":"107","endLine":4,"endColumn":20},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"104","severity":1,"message":"105","line":6,"column":10,"nodeType":"106","messageId":"107","endLine":6,"endColumn":20},{"ruleId":"104","severity":1,"message":"112","line":10,"column":10,"nodeType":"106","messageId":"107","endLine":10,"endColumn":18},{"ruleId":"104","severity":1,"message":"113","line":9,"column":11,"nodeType":"106","messageId":"107","endLine":9,"endColumn":25},{"ruleId":"104","severity":1,"message":"114","line":8,"column":11,"nodeType":"106","messageId":"107","endLine":8,"endColumn":19},{"ruleId":"104","severity":1,"message":"115","line":11,"column":12,"nodeType":"106","messageId":"107","endLine":11,"endColumn":19},{"ruleId":"104","severity":1,"message":"116","line":13,"column":11,"nodeType":"106","messageId":"107","endLine":13,"endColumn":18},{"ruleId":"117","severity":1,"message":"118","line":18,"column":8,"nodeType":"119","endLine":18,"endColumn":10,"suggestions":"120"},{"ruleId":"104","severity":1,"message":"121","line":2,"column":23,"nodeType":"106","messageId":"107","endLine":2,"endColumn":34},{"ruleId":"104","severity":1,"message":"122","line":8,"column":25,"nodeType":"106","messageId":"107","endLine":8,"endColumn":39},{"ruleId":"104","severity":1,"message":"123","line":16,"column":13,"nodeType":"106","messageId":"107","endLine":16,"endColumn":18},{"ruleId":"104","severity":1,"message":"116","line":18,"column":11,"nodeType":"106","messageId":"107","endLine":18,"endColumn":18},{"ruleId":"117","severity":1,"message":"124","line":31,"column":8,"nodeType":"119","endLine":31,"endColumn":10,"suggestions":"125"},{"ruleId":"117","severity":1,"message":"118","line":35,"column":8,"nodeType":"119","endLine":35,"endColumn":10,"suggestions":"126"},{"ruleId":"104","severity":1,"message":"127","line":42,"column":11,"nodeType":"106","messageId":"107","endLine":42,"endColumn":18},{"ruleId":"104","severity":1,"message":"128","line":7,"column":10,"nodeType":"106","messageId":"107","endLine":7,"endColumn":23},{"ruleId":"104","severity":1,"message":"116","line":15,"column":11,"nodeType":"106","messageId":"107","endLine":15,"endColumn":18},{"ruleId":"104","severity":1,"message":"129","line":25,"column":11,"nodeType":"106","messageId":"107","endLine":25,"endColumn":24},{"ruleId":"104","severity":1,"message":"130","line":12,"column":13,"nodeType":"106","messageId":"107","endLine":12,"endColumn":18},{"ruleId":"117","severity":1,"message":"131","line":46,"column":8,"nodeType":"119","endLine":46,"endColumn":10,"suggestions":"132"},{"ruleId":"133","severity":1,"message":"134","line":14,"column":13,"nodeType":"135","endLine":14,"endColumn":64},{"ruleId":"104","severity":1,"message":"136","line":1,"column":29,"nodeType":"106","messageId":"107","endLine":1,"endColumn":38},{"ruleId":"104","severity":1,"message":"137","line":2,"column":10,"nodeType":"106","messageId":"107","endLine":2,"endColumn":19},"no-unused-vars","'HeaderCard' is defined but never used.","Identifier","unusedVar","no-native-reassign",["138"],"no-negated-in-lhs",["139"],"'UserCard' is defined but never used.","'verifyPassword' is assigned a value but never used.","'password' is assigned a value but never used.","'reviews' is assigned a value but never used.","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getFarms' and 'getReviews'. Either include them or remove the dependency array.","ArrayExpression",["140"],"'getFarmById' is defined but never used.","'ReviewProvider' is defined but never used.","'farms' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'farmId' and 'getFarmById'. Either include them or remove the dependency array.",["141"],["142"],"'userPic' is assigned a value but never used.","'ReviewContext' is defined but never used.","'getReviewById' is assigned a value but never used.","'users' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'farmId', 'getFarmById', 'getFarms', 'getReviewById', 'getUsers', and 'reviewId'. Either include them or remove the dependency array.",["143"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'useEffect' is defined but never used.","'useParams' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},{"desc":"144","fix":"148"},{"desc":"149","fix":"150"},"Update the dependencies array to be: [getFarms, getReviews]",{"range":"151","text":"152"},"Update the dependencies array to be: [farmId, getFarmById]",{"range":"153","text":"154"},{"range":"155","text":"152"},"Update the dependencies array to be: [farmId, getFarmById, getFarms, getReviewById, getUsers, reviewId]",{"range":"156","text":"157"},[566,568],"[getFarms, getReviews]",[1058,1060],"[farmId, getFarmById]",[1128,1130],[1339,1341],"[farmId, getFarmById, getFarms, getReviewById, getUsers, reviewId]"]