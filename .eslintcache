[{"/Users/jessicadever/workspace/front_end/find-a-farmer/src/index.js":"1","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/Farms.js":"2","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/WelcomePage.js":"3","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/ApplicationViews.js":"4","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/eco/EcoList.js":"5","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/auth/RegisterNonFarmer.js":"6","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/auth/RegisterFarmer.js":"7","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/header/HeaderCard.js":"8","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/eco/EcoProvider.js":"9","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/FarmProvider.js":"10","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/auth/Login.js":"11","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/auth/InitalRegister.js":"12","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/FarmDetails.js":"13","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/FarmList.js":"14","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/eco/EcoCard.js":"15","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/users/UserProvider.js":"16","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/reviews/ReviewEditForm.js":"17","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/reviews/ReviewForm.js":"18","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/reviews/ReviewProvider.js":"19","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/header/LogOutBtn.js":"20","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/FarmCard.js":"21","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/AllFarmsBtn.js":"22","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/reviews/ReviewCard.js":"23","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/FarmFilter.js":"24","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/reviews/ReviewBtns.js":"25","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/pigEdibles/PigEdiblesProvider.js":"26","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/pigEdibles/PigEdiblesList.js":"27","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/pigEdibles/PigEdiblesCard.js":"28","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/footer/Footer.js":"29","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farmEdibles/FarmEdiblesProvider.js":"30"},{"size":326,"mtime":1611953826323,"results":"31","hashOfConfig":"32"},{"size":2023,"mtime":1613880320154,"results":"33","hashOfConfig":"32"},{"size":603,"mtime":1613880320154,"results":"34","hashOfConfig":"32"},{"size":1974,"mtime":1614439480512,"results":"35","hashOfConfig":"32"},{"size":737,"mtime":1613874840425,"results":"36","hashOfConfig":"32"},{"size":6878,"mtime":1613874840424,"results":"37","hashOfConfig":"32"},{"size":10460,"mtime":1614439545782,"results":"38","hashOfConfig":"32"},{"size":1048,"mtime":1613874840428,"results":"39","hashOfConfig":"32"},{"size":727,"mtime":1613100178324,"results":"40","hashOfConfig":"32"},{"size":1132,"mtime":1612807102098,"results":"41","hashOfConfig":"32"},{"size":2940,"mtime":1613874840422,"results":"42","hashOfConfig":"32"},{"size":661,"mtime":1613874840420,"results":"43","hashOfConfig":"32"},{"size":6751,"mtime":1613880320155,"results":"44","hashOfConfig":"32"},{"size":1302,"mtime":1613880320156,"results":"45","hashOfConfig":"32"},{"size":685,"mtime":1613100178324,"results":"46","hashOfConfig":"32"},{"size":876,"mtime":1612807102101,"results":"47","hashOfConfig":"32"},{"size":5034,"mtime":1613880320165,"results":"48","hashOfConfig":"32"},{"size":4892,"mtime":1613880320166,"results":"49","hashOfConfig":"32"},{"size":1840,"mtime":1613100178328,"results":"50","hashOfConfig":"32"},{"size":633,"mtime":1614045439414,"results":"51","hashOfConfig":"32"},{"size":1509,"mtime":1613874840426,"results":"52","hashOfConfig":"32"},{"size":802,"mtime":1613874840425,"results":"53","hashOfConfig":"32"},{"size":1568,"mtime":1613874840437,"results":"54","hashOfConfig":"32"},{"size":1385,"mtime":1612807102098,"results":"55","hashOfConfig":"32"},{"size":1300,"mtime":1613877906299,"results":"56","hashOfConfig":"32"},{"size":1149,"mtime":1614045439418,"results":"57","hashOfConfig":"32"},{"size":3533,"mtime":1614444027335,"results":"58","hashOfConfig":"32"},{"size":685,"mtime":1614045439416,"results":"59","hashOfConfig":"32"},{"size":236,"mtime":1613880320159,"results":"60","hashOfConfig":"32"},{"size":1323,"mtime":1614045439413,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1k554lk",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"64"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"/Users/jessicadever/workspace/front_end/find-a-farmer/src/index.js",[],["131","132"],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/Farms.js",[],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/WelcomePage.js",[],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/ApplicationViews.js",[],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/eco/EcoList.js",["133"],"import React, { useContext, useEffect, useState } from \"react\"\nimport { EcoCard } from \"./EcoCard\"\nimport { EcoContext } from \"./EcoProvider\"\nimport \"./Eco.css\"\n\nexport const EcoList = () => {\n\n    const { ecoTips, getEcoTips } = useContext(EcoContext)\n\n    useEffect(() => {  \n        getEcoTips()\n    }, [])\n\n    return (\n        <>\n            <section className=\"ecoContainer\">\n                <h2 className=\"ecoHeader\">Eco Tips</h2>\n                <div className=\"ecoTips\"> \n                    {\n                        ecoTips.map(ecoTip => {\n                            return <EcoCard key={ecoTip.id} ecoTip={ecoTip} />\n                        })\n                    }\n                </div>\n            </section>\n        </>\n    )\n\n}\n\n","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/auth/RegisterNonFarmer.js",["134"],"import React, { useRef, useState } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport \"./Login.css\"\nimport {Image, Video, Transformation, CloudinaryContext} from 'cloudinary-react';\n\n\nexport const RegisterNonFarmer = (props) => {\n    const firstName = useRef()\n    const lastName = useRef()\n    const username = useRef()\n    const email = useRef()\n    const zip = useRef()\n    const verifyPassword = useRef()\n    const conflictDialog = useRef()\n    const history = useHistory()\n\n    const [imageURL, setImageURL] = useState(\"\")\n\n    const [loading, setLoading] = useState(false)\n    const uploadImage = async e => {\n        const files = e.target.files\n        const data = new FormData()\n        data.append(\"file\", files[0])\n        data.append(\"upload_preset\", \"FindAFarmer\")\n        setLoading(true)\n        const response = await fetch(\n            \"https://api.cloudinary.com/v1_1/jessicadever1/image/upload\",\n            {\n                method: \"POST\",\n                body: data\n            }\n        )\n        const file = await response.json()\n        setImageURL(file.secure_url)\n        setLoading(false)\n    }\n/* -------------------- To check if user already exists -------------------- */\n\n    const existingUserCheck = () => {\n        return fetch(`http://localhost:8014/users?email=${email.current.value}`)\n            .then(res => res.json())\n            .then(user => !!user.length)\n    }\n\n/* -------------------- If user does not exist, then register the user and direct them to logged in page -------------------- */\n\n    const handleRegister = (e) => {\n        e.preventDefault()\n\n        existingUserCheck()\n            .then((userExists) => {\n                if (!userExists) {\n                    fetch(\"http://localhost:8014/users\", {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"application/json\"\n                        },\n                        body: JSON.stringify({\n                            email: email.current.value,\n                            name: `${firstName.current.value} ${lastName.current.value}`,\n                            imageURL: imageURL,\n                            username: username.current.value,\n                            zip: zip.current.value\n                        })\n                    })\n                    .then(res => res.json())\n                    .then(createdUser => {\n                        if (createdUser.hasOwnProperty(\"id\")) {\n                            localStorage.setItem(\"find-a-farm_user\", createdUser.id)\n                            history.push(\"/farms\")\n                        }\n                    })\n                }\n                else {\n                    conflictDialog.current.showModal()\n                }\n            })\n    }\n        \n/* -------------------- The contents of the register user box -------------------- */\n\n    return (\n        <>\n        <section className=\"container--registerNonFarmer\" style={{ textAlign: \"center\" }}>\n        <div className=\"leftSidePaddingNonFarmer\"></div>\n\n            <dialog className=\"dialog dialog--password\" ref={conflictDialog}>\n                <div>Account with that email address already exists</div>\n                <button className=\"button--close\" onClick={e => conflictDialog.current.close()}>Close</button>\n            </dialog>\n\n            <form className=\"form--nonFarmerLogin\" onSubmit={handleRegister}>\n                \n                <h2 className=\"h3 mb-3 font-weight-normal\">Get Started</h2>\n                    <section className=\"form--regNonFarmer\">\n                            <section className=\"firstNameLastNameNonFarmer\">\n                                <fieldset className=\"regInfoStackNonFarmer nameFieldSetNonFarmer\">\n                                    <label htmlFor=\"firstName\" className=\"firstNameNonFarmer\"> First Name </label>\n                                    <input ref={firstName} id=\"firstNameLabelNonFarmer\" type=\"text\" name=\"firstName\" className=\" form-name firstNameLabel\" placeholder=\"First name\" required autoFocus />\n                                </fieldset>\n                                <fieldset className=\"regInfoStackNonFarmer nameFieldSetNonFarmer\">\n                                    <label htmlFor=\"lastName\" className=\"lastNameNonFarmer\"> Last Name </label>\n                                    <input ref={lastName} id=\"lastNameLabelNonFarmer\" type=\"text\" name=\"lastName\" className=\" form-name lastNameLabelNonFarmer\" placeholder=\"Last name\" required />\n                                </fieldset>\n                            </section>\n                    </section>\n                    <section className=\"usernameImageNonFarmer\">\n                        <div className=\"imageNonFarmer\">\n                            <div className=\"uploadImgNonFarmer\">Upload Image</div>\n                                <input className=\"chooseFileBtn\" type=\"file\" name=\"file\" placeholder=\"Upload an image\" onChange={uploadImage}/>\n                                {loading ? (\n                                    <h3>Loading...</h3>\n                                ) : (\n                                        <img src={imageURL} style={{ width: \"100px\" }} />\n                                    )}\n                        </div>\n                        <div className=\"loginLeftNonFarmer\">\n                            <fieldset className=\"regInfoStackNonFarmer\">\n                                <label htmlFor=\"usernameNonFarmer\" className=\"userNameNonFarmer\"> Username </label>\n                                <input ref={username} type=\"text\" name=\"usernameNonFarmer\" id=\"userNameLabelNonFarmer\" className=\" form-username userNameLabelNonFarmer\" placeholder=\"Username\" required />\n                            </fieldset>\n                            <fieldset className=\"regInfoStackNonFarmer\">\n                                <label htmlFor=\"zip\" className=\"zipCodeNonFarmer\">Zip Code</label>\n                                <input ref={zip} type=\"text\" name=\"zip\" id=\"zipCodeLabel\" className=\" zipCodeLabelNonFarmer\" placeholder=\"Zip Code\" required />\n                            </fieldset>\n                            <fieldset className=\"regInfoStackNonFarmer\">\n                                <label htmlFor=\"inputEmail\" className=\"emailAddressNonFarmer\"> Email address </label>\n                                <input ref={email} type=\"email\" name=\"email\" id=\"emailAddressLabel\" className=\" emailAddressLabelNonFarmer\" placeholder=\"Email address\" required />\n                            </fieldset>\n                        </div>\n                </section>\n                            <fieldset className=\"loginBtnFieldsetNonFarmer\">\n                                <button className=\"loginBtnNonFarmer\" type=\"submit\"> Register </button>\n                            </fieldset>\n                \n            </form>\n        <div className=\"rightSidePaddingNonFarmer\"></div>\n        </section>\n    </>\n    )\n}","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/auth/RegisterFarmer.js",["135","136","137"],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/header/HeaderCard.js",[],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/eco/EcoProvider.js",[],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/FarmProvider.js",[],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/auth/Login.js",[],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/auth/InitalRegister.js",[],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/FarmDetails.js",["138","139"],"import React, { useContext, useEffect, useState } from \"react\"\nimport { FarmContext } from \"./FarmProvider\"\nimport \"./Farm.css\"\nimport { useParams } from \"react-router-dom\"\nimport { Link } from \"react-router-dom\"\nimport Pig from \"../images/Pig.png\"\nimport { ReviewContext } from \"../reviews/ReviewProvider\"\nimport { ReviewCard } from \"../reviews/ReviewCard\"\n\n\nexport const FarmDetail = () => {\n\n/* -------------------- To have access to farms, reviews and the userId -------------------- */\n\n    const { getFarmById } = useContext(FarmContext)\n    const [ farm, setFarm ] = useState({})\n    const { reviews, getReviews } = useContext(ReviewContext)\n    const { farmId } = useParams()\n\n/* -------------------- To be able to see only the reviews associated with current farm -------------------- */\n\n    const currentFarmReviews = reviews.filter((currentReview) => {\n        return currentReview.farmId === parseInt(farmId)\n    } )\n\n/* -------------------- To get the current farm selected, and the reviews associated with it -------------------- */\n\n    useEffect(() => {\n        getFarmById(farmId)\n        .then((response) => {\n            setFarm(response)\n        })\n    }, [])\n\n    useEffect(() => {\n        getReviews()\n    }, [])\n\n/* -------------------- To make sure every farm detail has a default profile pic, if no profile pic exists -------------------- */\n\n    if (farm.imageURL === \"\") {\n        let defaultFarmPic = Pig\n        farm.imageURL = defaultFarmPic\n    }\n\n/* -------------------- The contents of all of the farm details for selected farm -------------------- */\n\n    return (\n        <section className=\"farm\">\n            <div className=\"farm__upperBox\">\n                <img src={farm.imageURL} alt=\"{farm.name} default pic\" className=\"farmPic\"></img>\n                <div className=\"farmCardRight\">   \n                    <section className=\"farm__info\">\n                        <h2 className=\"farm__name\">{farm.farmName}</h2> \n                        \n                            <div className=\"farm__street\">{farm.streetAddress}</div>\n                            <div className=\"farm__address\">{farm.city} {farm.state} {farm.zip}</div>\n                       \n                        <button className=\"farmWebsite\"><a href={farm.website}>Website</a></button>\n                    </section>\n                </div>\n            </div>\n                <section className=\"farm__buttons\">\n                    <button className=\"farmDetailsBtn\"><Link className=\"a\" to={`/farms`}>Back to All Farms</Link></button>\n                    <button className=\"addReviewBtn\"><Link className=\"a\" to={`/reviews/create/${farm.id}`}>Add Review</Link></button>\n                </section>\n                        \n            <div>\n                <section className=\"farm__instructionAndLists\">\n                    <article className=\"farm__instructionsSection\">\n                        <h3 className=\"centerInstructionsTitle\">Instructions </h3>\n                        <div className=\"farm__instructions whiteSpace\">{farm.instructions}</div>\n                    </article>\n                    <section className=\"includeExcludeDivs\">\n                        <div className=\"farm__includeList\">\n                            <h3 className=\"farm__include\">Include</h3>\n                            <ul>\n                                <li>Vegetables*</li>\n                                <li>Fruit*</li>\n                                <li>Grains</li>\n                                <li>Nuts & Seeds</li>\n                                <li>Prepared Food</li>\n                                <li>Vegetables*</li>\n                                <li>Fruit*</li>\n                                <li>Grains</li>\n                                <li>Nuts & Seeds</li>\n                                <li>Prepared Food</li>\n                                <li>Vegetables*</li>\n                                <li>Fruit*</li>\n                                <li>Grains</li>\n                                <li>Nuts & Seeds</li>\n                                <li>Prepared Food</li>\n                            </ul>\n                            <p>*See exclusions</p>\n                        </div>\n                        <div className=\"farm__excludeList\">\n                            <h3 className=\"farm__exclude\">Exclude</h3>\n                            <ul>\n                                <li>Raw Meat</li>\n                                <li>Human Remains</li>\n                                <li>Food Stickers</li>\n                                <li>Plastic</li>\n                                <li>Canned Beans</li>\n                                <li>Avocado (all parts)</li>\n                                <li>Cherries</li>\n                                <li>Chocolate</li>\n                                <li>Kale</li>\n                                <li>Raw Meat</li>\n                                <li>Human Remains</li>\n                                <li>Food Stickers</li>\n                                <li>Plastic</li>\n                                <li>Canned Beans</li>\n                                <li>Avocado (all parts)</li>\n                                <li>Cherries</li>\n                                <li>Chocolate</li>\n                                <li>Kale</li>\n                            </ul>\n                        </div>\n                    </section>\n                </section>\n                <article className=\"farm__reviews\">\n                    <h2 className=\"farm__reviewHeader\">Reviews</h2>\n                    <div className=\"reviews\">\n                        {\n                            currentFarmReviews.map(review => {\n                                \n                                return <ReviewCard key={review.id} farm={farm} review={review}/>\n                        })\n                        }\n                    </div>\n                </article>\n            </div>\n        </section>\n    )\n}\n\n/*\nSaving for farm__reviews, just in case:\n\n                    <div className=\"farm__reviewCard\">\n                        <img className=\"userDefaultPic\" src={userPic} alt=\"user default pic\"></img>\n                        <section className=\"farm__reviewInfo\">\n                            <h3 className=\"review__name\">{farm.review?.name}</h3>\n                            <div className=\"review__date\">{farm.review?.date}</div>\n                            <p className=\"review__reviewText\">{farm.review?.reviewText}</p>\n                        </section>\n                    </div>\n\n*/","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/FarmList.js",["140"],"import React, { useContext, useEffect } from \"react\"\nimport { FarmCard } from \"./FarmCard\"\nimport { FarmContext } from \"./FarmProvider\"\nimport \"./Farm.css\"\nimport { FarmFilter } from \"./FarmFilter\"\nimport { AllFarmsBtn } from \"./AllFarmsBtn\"\n\nexport const FarmList = () => {\n\n/* -------------------- To have access to farms and reviews -------------------- */\n\n    const {farms, getFarms} = useContext(FarmContext)\n\n    useEffect(() => {   \n        getFarms()\n    }, [])\n    \n/* -------------------- To have access to the filter, see all farms btn & all of the farms -------------------- */    \n\n    return (\n        <>\n            <div className=\"leftSidePaddingFarmList\"></div>\n                <div className=\"farmFilter\">\n                    <FarmFilter />\n                    <AllFarmsBtn />\n                </div>\n                <div className=\"farms\">\n                    \n                    {\n                        farms.map(farm => {\n                            return <FarmCard key={farm.id} farm={farm} />\n                    })\n                    }\n                </div>\n            <div className=\"rightSidePaddingFarmList\"></div>\n        </>\n    )\n}","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/eco/EcoCard.js",[],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/users/UserProvider.js",[],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/reviews/ReviewEditForm.js",["141","142"],"import React, { useContext, useEffect, useState } from \"react\"\nimport { ReviewContext } from \"../reviews/ReviewProvider\"\nimport { FarmContext } from \"../farm/FarmProvider\"\nimport { useHistory, useParams } from \"react-router-dom\"\nimport \"./Review.css\"\n\n\nexport const ReviewEditForm = () => {\n\n/* -------------------- To have access to farms and reviews -------------------- */\n\n    const { getReviewById, editReview } = useContext(ReviewContext)\n    const { farms, getFarms } = useContext(FarmContext)\n\n/* -------------------- To access userId, and set userId to each review -------------------- */\n\n    const currentUser = localStorage.getItem(\"find-a-farm_user\")\n\n    const [review, setReview] = useState({\n        \"id\": 0,\n        \"userId\": currentUser,\n        \"farmId\": 0,\n        \"date\": \"\",\n        \"name\": \"\",\n        \"reviewText\": \"\",\n        \"farm\": \"\"\n    })\n\n/* -------------------- To have access individual farm that has been selected -------------------- */\n\n    const [farm, setFarm] = useState(\n        {}\n    )\n\n/* -------------------- Use the URL to set the farmId and reviewId -------------------- */\n\n    const { reviewId } = useParams()\n    const history = useHistory()\n\n/* -------------------- To use the farms and get the individual farms by the reviewId, and then to get specific farm -------------------- */\n\n    useEffect(() => {\n        getFarms().then(() => {\n            if (reviewId){\n            \n                getReviewById(parseInt(reviewId))\n                .then(review => {\n                    console.log(\"review\", review)\n                    setReview(review)\n                })\n            } else {\n                console.log(\"yup it's broken\")\n            }\n        })\n    }, [])\n\n/* -------------------- To capture and render the inputs to the form -------------------- */\n\n    const handleControlledInputChange = (event) => {\n        const newReview = { ...review }\n        let selectedVal = event.target.value\n        if (event.target.id.includes(\"Id\")) {\n            selectedVal = parseInt(selectedVal)\n        }\n        newReview[event.target.id] = selectedVal\n        setReview(newReview)\n    }\n\n/* -------------------- To save all of the reviews and then send the user back to the farm they reviewed -------------------- */\n\n    const handleClickSaveReview = () => {\n\n        if (reviewId) {\n            editReview(\n                {\n                    userId: parseInt(review.userId),\n                    username: review.userId.username,\n                    farmId: parseInt(review.farm.id),\n                    date: review.date,\n                    name: review.name,\n                    reviewText:review.reviewText,\n                    farm: farm.name,\n                    id: review.id\n                }\n            ).then(() => history.push(`/farms/detail/${review.farmId}`))\n        } }\n    \n/* -------------------- The contents of the form -------------------- */\n\n    return (\n        <div className=\"formCenterDiv\">\n            <form className=\"reviewForm\" id={farms.id}>\n                <h2 className=\"reviewForm__title\">{farm.name} Review</h2>\n                <fieldset>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"name\">Review name:</label>\n                        <input type=\"text\" id=\"name\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Review name\" value={review.name}/>\n                    </div>\n                </fieldset>\n                <fieldset>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"date\">Date Visited:</label>\n                        <input type=\"date\" id=\"date\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"\" value={review.date}/>\n                    </div>\n                </fieldset>\n                <fieldset>\n                    <div className=\"form-group reviewTextArea\">\n                        <div className=\"\">\n                            <label htmlFor=\"reviewText\">Share your experience:</label>\n                        </div>\n                        <textarea white-space=\"pre-wrap\" wrap=\"hard\" type=\"textarea\" id=\"reviewText\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Tell us all about it!\" value={review.reviewText}/>\n                    </div>\n                </fieldset>\n                <div className=\"centerReviewSubmitBtn\">\n                    <button id={review.farm.id} className=\"btn btn-primary\"\n                        onClick={ event => {\n                            event.preventDefault()\n                            handleClickSaveReview()\n                        }}>\n                        {\"Save Review\"}\n                    </button>\n                </div>\n            </form> \n        </div>\n    )\n}","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/reviews/ReviewForm.js",["143"],"import React, { useContext, useEffect, useState } from \"react\"\nimport { ReviewContext } from \"../reviews/ReviewProvider\"\nimport { FarmContext } from \"../farm/FarmProvider\"\nimport { useHistory, useParams } from \"react-router-dom\"\nimport \"./Review.css\"\n\n\nexport const ReviewForm = () => {\n\n/* -------------------- To have access to farms and reviews -------------------- */\n\n    const { addReview, getReviewById } = useContext(ReviewContext)\n    const { farms, getFarms, getFarmById } = useContext(FarmContext)\n\n/* -------------------- To access userId, and set userId to each review -------------------- */\n\n    const currentUser = localStorage.getItem(\"find-a-farm_user\")\n\n    const [review, setReview] = useState({\n        \"id\": 0,\n        \"userId\": currentUser,\n        \"farmId\": 0,\n        \"date\": \"\",\n        \"name\": \"\",\n        \"reviewText\": \"\",\n        \"farm\": \"\"\n    })\n\n/* -------------------- To have access individual farm that has been selected -------------------- */\n\n    const [farm, setFarm] = useState(\n        {}\n    )\n\n/* -------------------- Use the URL to set the farmId and reviewId -------------------- */\n\n    const { farmId } = useParams()\n    const { reviewId } = useParams()\n    const history = useHistory()\n\n/* -------------------- To use the farms and get the individual farms by the reviewId, and then to get specific farm -------------------- */\n\n    useEffect(() => {\n        getFarms().then(() => {\n            if (reviewId){\n                getReviewById(reviewId)\n                .then(review => {\n                    setReview(review)\n                })\n            } \n        })\n        getFarmById(farmId)\n        .then(farm => {\n            setFarm(farm)\n        })\n    }, [])\n\n/* -------------------- To capture and render the inputs to the form -------------------- */\n\n    const handleControlledInputChange = (event) => {\n        const newReview = { ...review }\n        let selectedVal = event.target.value\n        if (event.target.id.includes(\"Id\")) {\n            selectedVal = parseInt(selectedVal)\n        }\n        newReview[event.target.id] = selectedVal\n        setReview(newReview)\n    }\n\n/* -------------------- To save all of the reviews and then send the user back to the farm they reviewed -------------------- */\n\n    const handleClickSaveReview = (event) => {\n        event.preventDefault()\n        \n            addReview({\n                userId: parseInt(review.userId),\n                username: review.userId.username,\n                farmId: parseInt(farmId),\n                date: review.date,\n                name: review.name,\n                reviewText:review.reviewText,\n                farm: farm.name\n            })\n            .then(() => history.push(`/farms/detail/${farmId}`))\n        }\n    \n/* -------------------- The contents of the form -------------------- */\n\n    return (\n        <div className=\"formCenterDiv\">\n            <form className=\"reviewForm\" id={farms.id}>\n                <h2 className=\"reviewForm__title\">{farm.name} Review</h2>\n                <fieldset>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"name\">Review name:</label>\n                        <input type=\"text\" id=\"name\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Review name\" value={review.name}/>\n                    </div>\n                </fieldset>\n                <fieldset>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"date\">Date Visited:</label>\n                        <input type=\"date\" id=\"date\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"\" value={review.date}/>\n                    </div>\n                </fieldset>\n                <fieldset>\n                    <div className=\"form-group reviewTextArea\">\n                        <div className=\"\">\n                            <label htmlFor=\"reviewText\">Share your experience:</label>\n                        </div>\n                        <textarea white-space=\"pre-wrap\" wrap=\"hard\" type=\"textarea\" id=\"reviewText\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Tell us all about it!\" value={review.reviewText}/>\n                    </div>\n                </fieldset>\n                <div className=\"centerReviewSubmitBtn\">\n                    <button id={review.farmId} className=\"btn btn-primary\"\n                        onClick={ \n                            handleClickSaveReview\n                        }>\n                        Save Review\n                    </button>\n                </div>\n            </form> \n        </div>\n    )\n}","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/reviews/ReviewProvider.js",[],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/header/LogOutBtn.js",[],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/FarmCard.js",[],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/AllFarmsBtn.js",["144","145"],"import \"./Farm.css\"\nimport { Link } from \"react-router-dom\"\nimport { FarmContext } from \"./FarmProvider\"\nimport React, { useContext, useEffect, useState } from \"react\"\n\nexport const AllFarmsBtn = () => {\n\n/* -------------------- To be able to work with all of the farm data -------------------- */\n\n    const { getFarms } = useContext(FarmContext)\n    const [farms, setFarms] = useState([])\n    \n/* -------------------- To render all of the farms, if user has filtered farms -------------------- */\n\n    const handleSeeAllFarmsClick = () => {\n            getFarms()\n            .then(setFarms)\n    }\n\n/* -------------------- The farm button -------------------- */\n\n    return (\n        <div className=\"allFarmsBtnDiv\">\n            <button onClick={handleSeeAllFarmsClick} className=\"allFarmsBtn\">See All Farms</button>\n        </div>\n    )\n}","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/reviews/ReviewCard.js",[],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/FarmFilter.js",[],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/reviews/ReviewBtns.js",[],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/pigEdibles/PigEdiblesProvider.js",[],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/pigEdibles/PigEdiblesList.js",["146","147","148","149"],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/pigEdibles/PigEdiblesCard.js",["150","151","152","153"],"import React, { useContext, useEffect, useState } from \"react\"\nimport { PigEdiblesContext } from \"./PigEdiblesProvider\"\nimport \"./PigEdibles.css\"\n\nexport const PigEdiblesCard = ({ pigEdible }) => {\n\n    const { pigEdibles, getPigEdibles } = useContext(PigEdiblesContext)\n\n    // const [pigEdible, setPigEdible] = useState({\n    //     \"id\": 0,\n    //     \"name\": \"\",\n    //     \"checked\": false\n    // })\n\n    useEffect(()=> {\n        getPigEdibles()\n    }, [])\n\n    const handleCheckBox = (event) => {\n        // const newPigEdible = {...pigEdible}\n        // let selectedVal = event.target.checked\n        // newPigEdible[event.target.checked] =selectedVal\n        // setPigEdible(newPigEdible)\n        console.log(\"nothing works.\")\n    }\n    \n    return (\n        <>\n            <div className=\"checklistDiv\">\n                <fieldset className=\"checkListFieldset\" >\n                    <label htmlFor=\"checkboxLabel\" className=\"checkboxLabel\"> {pigEdible.name}</label>\n                    <input value={pigEdible.checked} type=\"checkbox\" name=\"checkboxLabel\" id=\"checkboxLabel\" className=\"checkbox\" onChange={handleCheckBox}/>\n                </fieldset>\n            </div>    \n        </>\n    )\n}","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/footer/Footer.js",[],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farmEdibles/FarmEdiblesProvider.js",[],{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","severity":1,"message":"159","line":12,"column":8,"nodeType":"160","endLine":12,"endColumn":10,"suggestions":"161"},{"ruleId":"162","severity":1,"message":"163","line":112,"column":41,"nodeType":"164","endLine":112,"endColumn":90},{"ruleId":"165","severity":1,"message":"166","line":6,"column":11,"nodeType":"167","messageId":"168","endLine":6,"endColumn":13},{"ruleId":"165","severity":1,"message":"169","line":7,"column":11,"nodeType":"167","messageId":"168","endLine":7,"endColumn":17},{"ruleId":"162","severity":1,"message":"163","line":148,"column":45,"nodeType":"164","endLine":148,"endColumn":94},{"ruleId":"158","severity":1,"message":"170","line":33,"column":8,"nodeType":"160","endLine":33,"endColumn":10,"suggestions":"171"},{"ruleId":"158","severity":1,"message":"172","line":37,"column":8,"nodeType":"160","endLine":37,"endColumn":10,"suggestions":"173"},{"ruleId":"158","severity":1,"message":"174","line":16,"column":8,"nodeType":"160","endLine":16,"endColumn":10,"suggestions":"175"},{"ruleId":"165","severity":1,"message":"176","line":31,"column":18,"nodeType":"167","messageId":"168","endLine":31,"endColumn":25},{"ruleId":"158","severity":1,"message":"177","line":55,"column":8,"nodeType":"160","endLine":55,"endColumn":10,"suggestions":"178"},{"ruleId":"158","severity":1,"message":"179","line":56,"column":8,"nodeType":"160","endLine":56,"endColumn":10,"suggestions":"180"},{"ruleId":"165","severity":1,"message":"181","line":3,"column":29,"nodeType":"167","messageId":"168","endLine":3,"endColumn":38},{"ruleId":"165","severity":1,"message":"182","line":10,"column":12,"nodeType":"167","messageId":"168","endLine":10,"endColumn":17},{"ruleId":"165","severity":1,"message":"183","line":13,"column":12,"nodeType":"167","messageId":"168","endLine":13,"endColumn":16},{"ruleId":"165","severity":1,"message":"176","line":13,"column":18,"nodeType":"167","messageId":"168","endLine":13,"endColumn":25},{"ruleId":"158","severity":1,"message":"184","line":20,"column":8,"nodeType":"160","endLine":20,"endColumn":10,"suggestions":"185"},{"ruleId":"165","severity":1,"message":"186","line":68,"column":43,"nodeType":"167","messageId":"168","endLine":68,"endColumn":53},{"ruleId":"165","severity":1,"message":"187","line":1,"column":17,"nodeType":"167","messageId":"168","endLine":1,"endColumn":27},{"ruleId":"165","severity":1,"message":"181","line":1,"column":29,"nodeType":"167","messageId":"168","endLine":1,"endColumn":38},{"ruleId":"165","severity":1,"message":"188","line":1,"column":40,"nodeType":"167","messageId":"168","endLine":1,"endColumn":48},{"ruleId":"165","severity":1,"message":"189","line":2,"column":10,"nodeType":"167","messageId":"168","endLine":2,"endColumn":28},"no-native-reassign",["190"],"no-negated-in-lhs",["191"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getEcoTips'. Either include it or remove the dependency array.","ArrayExpression",["192"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'id' is assigned a value but never used.","Identifier","unusedVar","'userId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'farmId' and 'getFarmById'. Either include them or remove the dependency array.",["193"],"React Hook useEffect has a missing dependency: 'getReviews'. Either include it or remove the dependency array.",["194"],"React Hook useEffect has a missing dependency: 'getFarms'. Either include it or remove the dependency array.",["195"],"'setFarm' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getFarms', 'getReviewById', and 'reviewId'. Either include them or remove the dependency array.",["196"],"React Hook useEffect has missing dependencies: 'farmId', 'getFarmById', 'getFarms', 'getReviewById', and 'reviewId'. Either include them or remove the dependency array.",["197"],"'useEffect' is defined but never used.","'farms' is assigned a value but never used.","'farm' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getPigEdibles'. Either include it or remove the dependency array.",["198"],"'farmEdible' is assigned a value but never used.","'useContext' is defined but never used.","'useState' is defined but never used.","'FarmEdiblesContext' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},{"desc":"211","fix":"212"},"Update the dependencies array to be: [getEcoTips]",{"range":"213","text":"214"},"Update the dependencies array to be: [farmId, getFarmById]",{"range":"215","text":"216"},"Update the dependencies array to be: [getReviews]",{"range":"217","text":"218"},"Update the dependencies array to be: [getFarms]",{"range":"219","text":"220"},"Update the dependencies array to be: [getFarms, getReviewById, reviewId]",{"range":"221","text":"222"},"Update the dependencies array to be: [farmId, getFarmById, getFarms, getReviewById, reviewId]",{"range":"223","text":"224"},"Update the dependencies array to be: [getPigEdibles]",{"range":"225","text":"226"},[296,298],"[getEcoTips]",[1177,1179],"[farmId, getFarmById]",[1232,1234],"[getReviews]",[467,469],"[getFarms]",[1719,1721],"[getFarms, getReviewById, reviewId]",[1711,1713],"[farmId, getFarmById, getFarms, getReviewById, reviewId]",[725,727],"[getPigEdibles]"]