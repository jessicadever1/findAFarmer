[{"/Users/jessicadever/workspace/front_end/find-a-farmer/src/index.js":"1","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/Farms.js":"2","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/WelcomePage.js":"3","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/ApplicationViews.js":"4","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/auth/RegisterFarmer.js":"5","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/eco/EcoList.js":"6","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/header/HeaderCard.js":"7","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/auth/RegisterNonFarmer.js":"8","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/eco/EcoProvider.js":"9","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/auth/Login.js":"10","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/auth/InitalRegister.js":"11","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/header/LogOutBtn.js":"12","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/eco/EcoCard.js":"13","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/FarmDetails.js":"14","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/FarmList.js":"15","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/FarmProvider.js":"16","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/reviews/ReviewEditForm.js":"17","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/reviews/ReviewForm.js":"18","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/users/UserProvider.js":"19","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/reviews/ReviewProvider.js":"20","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/FarmFilter.js":"21","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/reviews/ReviewCard.js":"22","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/FarmCard.js":"23","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/AllFarmsBtn.js":"24","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/reviews/ReviewBtns.js":"25","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/pigEdibles/PigEdiblesCard.js":"26","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/pigEdibles/PigEdiblesList.js":"27","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/pigEdibles/PigEdiblesProvider.js":"28"},{"size":326,"mtime":1611953826323,"results":"29","hashOfConfig":"30"},{"size":1634,"mtime":1613684256400,"results":"31","hashOfConfig":"30"},{"size":622,"mtime":1613100178321,"results":"32","hashOfConfig":"30"},{"size":1392,"mtime":1613100178320,"results":"33","hashOfConfig":"30"},{"size":10697,"mtime":1613683782701,"results":"34","hashOfConfig":"30"},{"size":747,"mtime":1613100178324,"results":"35","hashOfConfig":"30"},{"size":1098,"mtime":1613159795486,"results":"36","hashOfConfig":"30"},{"size":6914,"mtime":1613683765766,"results":"37","hashOfConfig":"30"},{"size":727,"mtime":1613100178324,"results":"38","hashOfConfig":"30"},{"size":3010,"mtime":1613100178322,"results":"39","hashOfConfig":"30"},{"size":661,"mtime":1613684246415,"results":"40","hashOfConfig":"30"},{"size":396,"mtime":1613159795486,"results":"41","hashOfConfig":"30"},{"size":685,"mtime":1613100178324,"results":"42","hashOfConfig":"30"},{"size":6453,"mtime":1613683894036,"results":"43","hashOfConfig":"30"},{"size":1168,"mtime":1613523243241,"results":"44","hashOfConfig":"30"},{"size":1132,"mtime":1612807102098,"results":"45","hashOfConfig":"30"},{"size":5007,"mtime":1613523243244,"results":"46","hashOfConfig":"30"},{"size":4715,"mtime":1613523243245,"results":"47","hashOfConfig":"30"},{"size":876,"mtime":1612807102101,"results":"48","hashOfConfig":"30"},{"size":1840,"mtime":1613100178328,"results":"49","hashOfConfig":"30"},{"size":1385,"mtime":1612807102098,"results":"50","hashOfConfig":"30"},{"size":2318,"mtime":1613100178328,"results":"51","hashOfConfig":"30"},{"size":1613,"mtime":1613523243240,"results":"52","hashOfConfig":"30"},{"size":842,"mtime":1612807102097,"results":"53","hashOfConfig":"30"},{"size":1300,"mtime":1612903895879,"results":"54","hashOfConfig":"30"},{"size":502,"mtime":1613682912804,"results":"55","hashOfConfig":"30"},{"size":701,"mtime":1613684426207,"results":"56","hashOfConfig":"30"},{"size":884,"mtime":1613681332663,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1k554lk",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"/Users/jessicadever/workspace/front_end/find-a-farmer/src/index.js",[],["126","127"],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/Farms.js",[],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/WelcomePage.js",["128"],"import React from \"react\"\nimport { Route } from \"react-router-dom\"\nimport { Register } from \"./auth/RegisterNonFarmer\"\nimport { RegisterBtns } from \"./auth/InitalRegister\"\nimport { Login } from \"./auth/Login\"\nimport \"./WelcomePage.css\"\n\n/* -------------------- To render the login and register info on the same page -------------------- */    \n\nexport const WelcomePage = () => {\n    return (\n        <section className=\"welcome\">\n            <>\n\n                <Route path=\"/welcome\">\n                    <RegisterBtns />\n                    <Login />\n                </Route>\n\n            </>\n        </section>\n    )\n}","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/ApplicationViews.js",["129"],"import React from \"react\"\nimport { Route } from \"react-router-dom\"\nimport { FarmProvider } from \"./farm/FarmProvider\"\nimport { FarmList } from \"./farm/FarmList\"\nimport { FarmDetail } from \"./farm/FarmDetails\"\nimport { HeaderCard } from \"./header/HeaderCard\"\nimport { ReviewProvider } from \"./reviews/ReviewProvider\"\nimport { ReviewForm } from \"./reviews/ReviewForm\"\nimport { UserProvider } from \"./users/UserProvider\"\nimport { ReviewEditForm } from \"./reviews/ReviewEditForm\"\n\nexport const ApplicationViews = () => {\n    \n/* -------------------- To display the FarmList, Details and Forms on their individual URLs -------------------- */    \n\n    return (\n        <>\n\n        <UserProvider>\n            <ReviewProvider>\n                <FarmProvider>\n\n                    <Route exact path=\"/farms\">\n                        <FarmList />\n                    </Route>\n\n                    <Route exact path=\"/farms/detail/:farmId(\\d+)\">\n                        <FarmDetail />\n                    </Route>\n\n                    <Route exact path=\"/reviews/create/:farmId(\\d+)\">\n                        <ReviewForm />\n                    </Route>\n\n                    <Route exact path=\"/reviews/edit/:reviewId(\\d+)\">\n                        <ReviewEditForm />\n                    </Route>\n\n                </FarmProvider>\n            </ReviewProvider>\n        </UserProvider>\n\n        </>\n    )\n}","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/auth/RegisterFarmer.js",["130","131","132","133","134"],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/eco/EcoList.js",["135","136"],"import React, { useContext, useEffect, useState } from \"react\"\nimport { EcoCard } from \"./EcoCard\"\nimport { EcoContext } from \"./EcoProvider\"\nimport \"./Eco.css\"\n\nexport const EcoList = () => {\n\n    const { ecoTips, getEcoTips } = useContext(EcoContext)\n\n    useEffect(() => {  \n        getEcoTips()\n    }, [])\n\n    return (\n        <>\n            <section className=\"ecoContainer\">\n                <h2 className=\"ecoHeader\">Eco Tips</h2>\n                <div className=\"ecoTips\"> \n                    {\n                        ecoTips.map(ecoTip => {\n                            return <EcoCard key={ecoTip.id} ecoTip={ecoTip} />\n                        })\n                    }\n                </div>\n            </section>\n        </>\n    )\n\n}\n\n","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/header/HeaderCard.js",["137","138"],"import React from \"react\"\nimport \"./Header.css\"\nimport Pig from '../images/Pig.png'\nimport {Link, useHistory} from 'react-router-dom'\nimport { LogOutBtn } from \"./LogOutBtn\"\n\n/* -------------------- To give all pages a uniform header -------------------- */\n\nexport const HeaderCard = () => {\n\n    const currentUser = parseInt(localStorage.getItem(\"find-a-farm_user\"))\n\n    const hideButtons = () => {\n        if (currentUser) {\n            return (\n                <>\n                    <LogOutBtn />\n                </>\n            )\n        }\n    } \n\n    return (\n        <>\n        <header>\n            <div className=\"logOut\">\n                {hideButtons()}\n            </div>\n        \n            <h1 className=\"header\">Find A Farmer</h1>\n            <h2 className=\"h2\">Where will you plop your slop?</h2>\n            <div className=\"centerDefaultImg\">\n                <div className=\"emptySpace\"></div>\n                <img className=\"profileDefault\" src={Pig} alt=\"default\"></img>\n                <div className=\"emptySpace\"></div>\n            </div>\n        </header>\n        </>\n    )\n}","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/auth/RegisterNonFarmer.js",["139","140"],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/eco/EcoProvider.js",[],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/auth/Login.js",["141","142"],"import React, { useRef } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport { Link } from \"react-router-dom\"\nimport \"./Login.css\"\n\nexport const Login = props => {\n    const email = useRef()\n    const password = useRef()\n    const existDialog = useRef()\n    const history = useHistory()\n\n/* -------------------- To check if user already exists -------------------- */\n\n    const existingUserCheck = () => {\n        return fetch (`http://localhost:8014/users?email=${email.current.value}`)\n        .then(res => res.json())\n        .then(user => user.length ? user[0] : false)\n    }\n\n/* -------------------- To switch to logged in page, if user exists -------------------- */\n\n    const handleLogin = (e) => {\n        e.preventDefault()\n\n        existingUserCheck()\n            .then(exists => {\n                if (exists) {\n                    localStorage.setItem(\"find-a-farm_user\", exists.id)\n                    history.push(`/farms`)\n                } else {\n                    existDialog.current.showModal()\n                }\n            })\n    }\n\n/* -------------------- The contents of the log in form -------------------- */\n\n    return (\n        <section className=\"container--login\">\n            <dialog className=\"dialog dialog--auth\" ref={existDialog}>\n                <div>User does not exist</div>\n                <button className=\"button--close\" onClick={e => existDialog.current.close()}>Close</button>\n            </dialog>\n\n            <section className=\"userEntrance\">\n                <form className=\"form--login\" onSubmit={handleLogin}>\n                    <h2 className=\"form--heading\">Welcome Back!</h2>\n                        <section className=\"loginFields\">\n                            <fieldset>\n                                <label htmlFor=\"inputEmail\"> </label>\n                                <input ref={email} type=\"email\"\n                                    id=\"email\"\n                                    className=\"form-control\"\n                                    placeholder=\"Email address\"\n                                    required autoFocus />\n                            </fieldset>\n                            <fieldset>\n                                <label htmlFor=\"inputPassword\"> </label>\n                                <input type=\"text\"\n                                    id=\"password\"\n                                    className=\"form-control\"\n                                    placeholder=\"Password\"\n                                    required autoFocus />\n                            </fieldset>\n                            <fieldset className=\"loginBtnFieldset\">\n                                <button className=\"loginBtnWB\" type=\"submit\" id=\"userLogin\">\n                                    Log in\n                                    </button>\n                                \n                            </fieldset>\n                        </section>\n                </form>\n            </section>\n\n        </section>\n    )\n}","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/auth/InitalRegister.js",[],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/header/LogOutBtn.js",[],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/eco/EcoCard.js",[],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/FarmDetails.js",["143","144","145"],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/FarmList.js",["146"],"import React, { useContext, useEffect } from \"react\"\nimport { FarmCard } from \"./FarmCard\"\nimport { FarmContext } from \"./FarmProvider\"\nimport \"./Farm.css\"\nimport { FarmFilter } from \"./FarmFilter\"\nimport { AllFarmsBtn } from \"./AllFarmsBtn\"\n\nexport const FarmList = () => {\n\n/* -------------------- To have access to farms and reviews -------------------- */\n\n    const {farms, getFarms} = useContext(FarmContext)\n\n    useEffect(() => {   \n        getFarms()\n    }, [])\n    \n/* -------------------- To have access to the filter, see all farms btn & all of the farms -------------------- */    \n\n    return (\n        <>\n            <div className=\"leftSidePaddingFarmList\"></div>\n                <div className=\"farmFilter\">\n                    <FarmFilter />\n                    <AllFarmsBtn />\n                </div>\n                <div className=\"farms\">\n                    \n                    {\n                        farms.map(farm => {\n                            return <FarmCard key={farm.id} farm={farm} />\n                    })\n                    }\n                </div>\n            <div className=\"rightSidePaddingFarmList\"></div>\n        </>\n    )\n}","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/FarmProvider.js",[],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/reviews/ReviewEditForm.js",["147","148","149","150","151"],"import React, { useContext, useEffect, useState } from \"react\"\nimport { ReviewContext } from \"../reviews/ReviewProvider\"\nimport { FarmContext } from \"../farm/FarmProvider\"\nimport { useHistory, useParams } from \"react-router-dom\"\nimport \"./Review.css\"\n\n\nexport const ReviewEditForm = () => {\n\n/* -------------------- To have access to farms and reviews -------------------- */\n\n    const { getReviewById, editReview } = useContext(ReviewContext)\n    const { farms, getFarms, getFarmById } = useContext(FarmContext)\n\n/* -------------------- To access userId, and set userId to each review -------------------- */\n\n    const currentUser = localStorage.getItem(\"find-a-farm_user\")\n\n    const [review, setReview] = useState({\n        \"id\": 0,\n        \"userId\": currentUser,\n        \"farmId\": 0,\n        \"date\": \"\",\n        \"name\": \"\",\n        \"reviewText\": \"\",\n        \"farm\": \"\"\n    })\n\n    const [isLoading, setIsLoading] = useState(true)\n\n/* -------------------- To have access individual farm that has been selected -------------------- */\n\n    const [farm, setFarm] = useState(\n        {}\n    )\n\n/* -------------------- Use the URL to set the farmId and reviewId -------------------- */\n\n    const { reviewId } = useParams()\n    const history = useHistory()\n\n/* -------------------- To use the farms and get the individual farms by the reviewId, and then to get specific farm -------------------- */\n\n    useEffect(() => {\n        getFarms().then(() => {\n            if (reviewId){\n            \n                getReviewById(parseInt(reviewId))\n                .then(review => {\n                    console.log(\"review\", review)\n                    setReview(review)\n                })\n            } else {\n                console.log(\"yup it's broken\")\n            }\n        })\n    }, [])\n\n/* -------------------- To capture and render the inputs to the form -------------------- */\n\n    const handleControlledInputChange = (event) => {\n        const newReview = { ...review }\n        let selectedVal = event.target.value\n        if (event.target.id.includes(\"Id\")) {\n            selectedVal = parseInt(selectedVal)\n        }\n        newReview[event.target.id] = selectedVal\n        setReview(newReview)\n    }\n\n/* -------------------- To save all of the reviews and then send the user back to the farm they reviewed -------------------- */\n\n    const handleClickSaveReview = () => {\n        // setIsLoading(true)\n\n        if (reviewId) {\n            editReview(\n                {\n                    userId: parseInt(review.userId),\n                    username: review.userId.username,\n                    farmId: parseInt(review.farm.id),\n                    date: review.date,\n                    name: review.name,\n                    reviewText:review.reviewText,\n                    farm: farm.name,\n                    id: review.id\n                }\n            ).then(() => history.push(`/farms/detail/${review.farmId}`))\n        } }\n    \n/* -------------------- The contents of the form -------------------- */\n\n    return (\n        <div className=\"formCenterDiv\">\n            <form className=\"reviewForm\" id={farms.id}>\n                <h2 className=\"reviewForm__title\">{farm.name} Review</h2>\n                <fieldset>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"name\">Review name:</label>\n                        <input type=\"text\" id=\"name\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Review name\" value={review.name}/>\n                    </div>\n                </fieldset>\n                <fieldset>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"date\">Date Visited:</label>\n                        <input type=\"date\" id=\"date\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"\" value={review.date}/>\n                    </div>\n                </fieldset>\n                <fieldset>\n                    <div className=\"form-group reviewTextArea\">\n                        <div className=\"\">\n                            <label htmlFor=\"reviewText\">Share your experience:</label>\n                        </div>\n                        <textarea white-space=\"pre-wrap\" wrap=\"hard\" type=\"textarea\" id=\"reviewText\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Tell us all about it!\" value={review.reviewText}/>\n                    </div>\n                </fieldset>\n                <div className=\"centerReviewSubmitBtn\">\n                    <button id={review.farm.id} className=\"btn btn-primary\"\n                        // disabled={isLoading}\n                        onClick={ event => {\n                            event.preventDefault()\n                            handleClickSaveReview()\n                        }}>\n                        {\"Save Review\"}\n                    </button>\n                </div>\n            </form> \n        </div>\n    )\n}","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/reviews/ReviewForm.js",["152","153"],"import React, { useContext, useEffect, useState } from \"react\"\nimport { ReviewContext } from \"../reviews/ReviewProvider\"\nimport { FarmContext } from \"../farm/FarmProvider\"\nimport { useHistory, useParams } from \"react-router-dom\"\nimport \"./Review.css\"\n\n\nexport const ReviewForm = () => {\n\n/* -------------------- To have access to farms and reviews -------------------- */\n\n    const { addReview, getReviewById } = useContext(ReviewContext)\n    const { farms, getFarms, getFarmById } = useContext(FarmContext)\n\n/* -------------------- To access userId, and set userId to each review -------------------- */\n\n    const currentUser = localStorage.getItem(\"find-a-farm_user\")\n\n    const [review, setReview] = useState({\n        \"id\": 0,\n        \"userId\": currentUser,\n        \"farmId\": 0,\n        \"date\": \"\",\n        \"name\": \"\",\n        \"reviewText\": \"\",\n        \"farm\": \"\"\n    })\n\n/* -------------------- To have access individual farm that has been selected -------------------- */\n\n    const [farm, setFarm] = useState(\n        {}\n    )\n\n/* -------------------- Use the URL to set the farmId and reviewId -------------------- */\n\n    const { farmId } = useParams()\n    const { reviewId } = useParams()\n    const history = useHistory()\n\n/* -------------------- To use the farms and get the individual farms by the reviewId, and then to get specific farm -------------------- */\n\n    useEffect(() => {\n        getFarms().then(() => {\n            if (reviewId){\n                getReviewById(reviewId)\n                .then(review => {\n                    setReview(review)\n                })\n            } \n        })\n        getFarmById(farmId)\n        .then(farm => {\n            setFarm(farm)\n        })\n    }, [])\n\n/* -------------------- To capture and render the inputs to the form -------------------- */\n\n    const handleControlledInputChange = (event) => {\n        const newReview = { ...review }\n        let selectedVal = event.target.value\n        if (event.target.id.includes(\"Id\")) {\n            selectedVal = parseInt(selectedVal)\n        }\n        newReview[event.target.id] = selectedVal\n        setReview(newReview)\n    }\n\n/* -------------------- To save all of the reviews and then send the user back to the farm they reviewed -------------------- */\n\n    const handleClickSaveReview = (event) => {\n        event.preventDefault()\n        \n            addReview({\n                userId: parseInt(review.userId),\n                username: review.userId.username,\n                farmId: parseInt(farmId),\n                date: review.date,\n                name: review.name,\n                reviewText:review.reviewText,\n                farm: farm.name\n            })\n            .then(() => history.push(`/farms/detail/${farmId}`))\n        }\n    \n/* -------------------- The contents of the form -------------------- */\n\n    return (\n        <div className=\"formCenterDiv\">\n            <form className=\"reviewForm\" id={farms.id}>\n                <h2 className=\"reviewForm__title\">{farm.name} Review</h2>\n                <fieldset>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"name\">Review name:</label>\n                        <input type=\"text\" id=\"name\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Review name\" value={review.name}/>\n                    </div>\n                </fieldset>\n                <fieldset>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"date\">Date Visited:</label>\n                        <input type=\"date\" id=\"date\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"\" value={review.date}/>\n                    </div>\n                </fieldset>\n                <fieldset>\n                    <div className=\"form-group reviewTextArea\">\n                        <div className=\"\">\n                            <label htmlFor=\"reviewText\">Share your experience:</label>\n                        </div>\n                        <textarea white-space=\"pre-wrap\" wrap=\"hard\" wrap=\"hard\" type=\"textarea\" id=\"reviewText\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Tell us all about it!\" value={review.reviewText}/>\n                    </div>\n                </fieldset>\n                <div className=\"centerReviewSubmitBtn\">\n                    <button id={review.farmId} className=\"btn btn-primary\"\n                        onClick={ \n                            handleClickSaveReview\n                        }>\n                        Save Review\n                    </button>\n                </div>\n            </form> \n        </div>\n    )\n}","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/users/UserProvider.js",[],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/reviews/ReviewProvider.js",[],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/FarmFilter.js",[],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/reviews/ReviewCard.js",["154","155","156","157","158","159","160"],"import React, { useContext, useEffect, useState } from \"react\"\nimport \"./Review.css\"\nimport userPicture from \"../images/user.png\"\nimport trashIcon from \"../images/trash.png\"\nimport editIcon from \"../images/editIcon.png\"\nimport { ReviewContext } from \"./ReviewProvider\"\nimport { useHistory } from \"react-router-dom\"\nimport { ReviewBtns } from \"./ReviewBtns\"\n\nexport const ReviewCard = ({ review, user, farm }) => {\n\n/* -------------------- Provide reviews for each farm, and delete them upon click -------------------- */\n\n    const { deleteReview } = useContext(ReviewContext)\n\n    const userPic = userPicture\n    const currentUser = parseInt(localStorage.getItem(\"find-a-farm_user\"))\n    const history = useHistory()\n\n    const handleClickDeleteReview = () => {\n        \n        if (currentUser === review.userId) {\n            deleteReview(review.id)\n            .then(() => {\n                history.push(`/farms/detail/${farm.id}`)\n            })\n        }\n    }\n\n    const handleClickEditReview = () => {\n        if (currentUser === review.userId) {\n            history.push(`/reviews/edit/${review.id}`)\n        }\n    }\n\n    const hideButtons = () => {\n        if (currentUser === review.userId) {\n            return (\n                <>\n                    <ReviewBtns key={review.id} review={review} user={user} farm={farm} />\n                </>\n            )\n        }\n    } \n\n    if (review.user.imageURL === \"\") {\n        let defaultUserPic = userPicture\n        review.user.imageURL = defaultUserPic\n    }\n\n/* -------------------- Contents of individual reviews -------------------- */\n\n    return (\n        <article className=\"review\">\n            <img className=\"reviewerProfilePic\" src={review.user.imageURL} alt=\"user default pic\"></img>\n            \n            <section className=\"review__userInfo\">\n                <div className=\"reviewBy\">\n                    <h3 className=\"reviewUsername\">{review.user.username}: </h3>\n                    <h3 className=\"review__name\">{review.name}</h3>\n                </div>\n                <div className=\"review__date\">{review.date}</div>\n                <p className=\"review__reviewText\">{review.reviewText}</p>\n            </section>\n            <div className=\"reviewBtnsDiv\">\n                {hideButtons()}\n            </div>\n        </article>\n    )\n}","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/FarmCard.js",["161","162"],"import React from \"react\"\nimport \"./Farm.css\"\nimport { Link } from \"react-router-dom\"\nimport {useHistory } from \"react-router-dom\"\n\nimport Pig from '../images/Pig.png'\nimport { ReviewContext } from \"../reviews/ReviewProvider\"\n\n/* -------------------- To always have a default farm picture available, if user doesn't have a farm pic -------------------- */\n\nexport const FarmCard = ( { farm } ) =>  {\n    if (farm.imageURL === \"\") {\n        let defaultFarmPic = Pig\n        farm.imageURL = defaultFarmPic\n    }\n\n\n    \n/* -------------------- The content of individual farm cards -------------------- */\n\n    return (\n        <section className=\"farm\">\n            <div className=\"farm__upperBox\">\n                <img src={farm.imageURL} width=\"100\" height=\"100\" alt=\"{farm.name} default pic\" className=\"farmPic\"></img>\n                <div className=\"farmCardRight\">   \n                    <section className=\"farm__info\">\n                        <h2 className=\"farm__name\">{farm.farmName}</h2>\n                        <div className=\"farm__street\">{farm.streetAddress}</div>\n                        <div className=\"farm__address\">{farm.city} {farm.state} {farm.zip}</div>\n                    </section>\n                </div>\n            </div>\n            <section className=\"farm__buttons\">\n                <button className=\"farmDetailsBtn\"><Link to={`/farms/detail/${farm.id}`}>See Details</Link></button>\n                <Link to={`/reviews/create/${farm.id}`}><button className=\"addRevBtn\">\n                    Add Review\n                </button></Link>\n            </section>\n        </section>\n    )\n\n}\n","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/AllFarmsBtn.js",["163","164","165"],"import \"./Farm.css\"\nimport { Link } from \"react-router-dom\"\nimport { FarmContext } from \"./FarmProvider\"\nimport React, { useContext, useEffect, useState } from \"react\"\n\nexport const AllFarmsBtn = () => {\n\n/* -------------------- To be able to work with all of the farm data -------------------- */\n\n    const { getFarms } = useContext(FarmContext)\n    const [farms, setFarms] = useState([])\n    \n/* -------------------- To render all of the farms, if user has filtered farms -------------------- */\n\n    const handleSeeAllFarmsClick = () => {\n            getFarms()\n            .then(setFarms)\n    }\n\n/* -------------------- The farm button -------------------- */\n\n    return (\n        <div className=\"allFarmsBtnDiv\">\n            <button onClick={handleSeeAllFarmsClick} className=\"allFarmsBtn\">See All Farms</button>\n        </div>\n    )\n}","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/reviews/ReviewBtns.js",[],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/pigEdibles/PigEdiblesCard.js",[],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/pigEdibles/PigEdiblesList.js",["166","167","168","169"],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/pigEdibles/PigEdiblesProvider.js",[],{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","severity":1,"message":"175","line":3,"column":10,"nodeType":"176","messageId":"177","endLine":3,"endColumn":18},{"ruleId":"174","severity":1,"message":"178","line":6,"column":10,"nodeType":"176","messageId":"177","endLine":6,"endColumn":20},{"ruleId":"174","severity":1,"message":"179","line":13,"column":11,"nodeType":"176","messageId":"177","endLine":13,"endColumn":16},{"ruleId":"174","severity":1,"message":"180","line":18,"column":11,"nodeType":"176","messageId":"177","endLine":18,"endColumn":21},{"ruleId":"174","severity":1,"message":"181","line":19,"column":11,"nodeType":"176","messageId":"177","endLine":19,"endColumn":25},{"ruleId":"174","severity":1,"message":"182","line":22,"column":9,"nodeType":"176","messageId":"177","endLine":22,"endColumn":15},{"ruleId":"183","severity":1,"message":"184","line":142,"column":45,"nodeType":"185","endLine":142,"endColumn":94},{"ruleId":"174","severity":1,"message":"186","line":1,"column":40,"nodeType":"176","messageId":"177","endLine":1,"endColumn":48},{"ruleId":"187","severity":1,"message":"188","line":12,"column":8,"nodeType":"189","endLine":12,"endColumn":10,"suggestions":"190"},{"ruleId":"174","severity":1,"message":"191","line":4,"column":9,"nodeType":"176","messageId":"177","endLine":4,"endColumn":13},{"ruleId":"174","severity":1,"message":"192","line":4,"column":15,"nodeType":"176","messageId":"177","endLine":4,"endColumn":25},{"ruleId":"174","severity":1,"message":"181","line":12,"column":11,"nodeType":"176","messageId":"177","endLine":12,"endColumn":25},{"ruleId":"183","severity":1,"message":"184","line":113,"column":41,"nodeType":"185","endLine":113,"endColumn":90},{"ruleId":"174","severity":1,"message":"191","line":3,"column":10,"nodeType":"176","messageId":"177","endLine":3,"endColumn":14},{"ruleId":"174","severity":1,"message":"193","line":8,"column":11,"nodeType":"176","messageId":"177","endLine":8,"endColumn":19},{"ruleId":"174","severity":1,"message":"194","line":19,"column":9,"nodeType":"176","messageId":"177","endLine":19,"endColumn":15},{"ruleId":"187","severity":1,"message":"195","line":34,"column":8,"nodeType":"189","endLine":34,"endColumn":10,"suggestions":"196"},{"ruleId":"187","severity":1,"message":"197","line":38,"column":8,"nodeType":"189","endLine":38,"endColumn":10,"suggestions":"198"},{"ruleId":"187","severity":1,"message":"199","line":16,"column":8,"nodeType":"189","endLine":16,"endColumn":10,"suggestions":"200"},{"ruleId":"174","severity":1,"message":"201","line":13,"column":30,"nodeType":"176","messageId":"177","endLine":13,"endColumn":41},{"ruleId":"174","severity":1,"message":"202","line":29,"column":12,"nodeType":"176","messageId":"177","endLine":29,"endColumn":21},{"ruleId":"174","severity":1,"message":"203","line":29,"column":23,"nodeType":"176","messageId":"177","endLine":29,"endColumn":35},{"ruleId":"174","severity":1,"message":"204","line":33,"column":18,"nodeType":"176","messageId":"177","endLine":33,"endColumn":25},{"ruleId":"187","severity":1,"message":"205","line":57,"column":8,"nodeType":"189","endLine":57,"endColumn":10,"suggestions":"206"},{"ruleId":"187","severity":1,"message":"207","line":56,"column":8,"nodeType":"189","endLine":56,"endColumn":10,"suggestions":"208"},{"ruleId":"209","severity":1,"message":"210","line":110,"column":70,"nodeType":"211","endLine":110,"endColumn":81},{"ruleId":"174","severity":1,"message":"212","line":1,"column":29,"nodeType":"176","messageId":"177","endLine":1,"endColumn":38},{"ruleId":"174","severity":1,"message":"186","line":1,"column":40,"nodeType":"176","messageId":"177","endLine":1,"endColumn":48},{"ruleId":"174","severity":1,"message":"213","line":4,"column":8,"nodeType":"176","messageId":"177","endLine":4,"endColumn":17},{"ruleId":"174","severity":1,"message":"214","line":5,"column":8,"nodeType":"176","messageId":"177","endLine":5,"endColumn":16},{"ruleId":"174","severity":1,"message":"215","line":16,"column":11,"nodeType":"176","messageId":"177","endLine":16,"endColumn":18},{"ruleId":"174","severity":1,"message":"216","line":20,"column":11,"nodeType":"176","messageId":"177","endLine":20,"endColumn":34},{"ruleId":"174","severity":1,"message":"217","line":30,"column":11,"nodeType":"176","messageId":"177","endLine":30,"endColumn":32},{"ruleId":"174","severity":1,"message":"192","line":4,"column":9,"nodeType":"176","messageId":"177","endLine":4,"endColumn":19},{"ruleId":"174","severity":1,"message":"218","line":7,"column":10,"nodeType":"176","messageId":"177","endLine":7,"endColumn":23},{"ruleId":"174","severity":1,"message":"191","line":2,"column":10,"nodeType":"176","messageId":"177","endLine":2,"endColumn":14},{"ruleId":"174","severity":1,"message":"212","line":4,"column":29,"nodeType":"176","messageId":"177","endLine":4,"endColumn":38},{"ruleId":"174","severity":1,"message":"219","line":11,"column":12,"nodeType":"176","messageId":"177","endLine":11,"endColumn":17},{"ruleId":"174","severity":1,"message":"186","line":1,"column":39,"nodeType":"176","messageId":"177","endLine":1,"endColumn":47},{"ruleId":"187","severity":1,"message":"220","line":11,"column":8,"nodeType":"189","endLine":11,"endColumn":10,"suggestions":"221"},{"ruleId":"174","severity":1,"message":"222","line":13,"column":11,"nodeType":"176","messageId":"177","endLine":13,"endColumn":22},{"ruleId":"174","severity":1,"message":"223","line":16,"column":11,"nodeType":"176","messageId":"177","endLine":16,"endColumn":22},"no-native-reassign",["224"],"no-negated-in-lhs",["225"],"no-unused-vars","'Register' is defined but never used.","Identifier","unusedVar","'HeaderCard' is defined but never used.","'state' is assigned a value but never used.","'pigEdibles' is assigned a value but never used.","'verifyPassword' is assigned a value but never used.","'farmId' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getEcoTips'. Either include it or remove the dependency array.","ArrayExpression",["226"],"'Link' is defined but never used.","'useHistory' is defined but never used.","'password' is assigned a value but never used.","'userId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'farmId' and 'getFarmById'. Either include them or remove the dependency array.",["227"],"React Hook useEffect has a missing dependency: 'getReviews'. Either include it or remove the dependency array.",["228"],"React Hook useEffect has a missing dependency: 'getFarms'. Either include it or remove the dependency array.",["229"],"'getFarmById' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'setIsLoading' is assigned a value but never used.","'setFarm' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getFarms', 'getReviewById', and 'reviewId'. Either include them or remove the dependency array.",["230"],"React Hook useEffect has missing dependencies: 'farmId', 'getFarmById', 'getFarms', 'getReviewById', and 'reviewId'. Either include them or remove the dependency array.",["231"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useEffect' is defined but never used.","'trashIcon' is defined but never used.","'editIcon' is defined but never used.","'userPic' is assigned a value but never used.","'handleClickDeleteReview' is assigned a value but never used.","'handleClickEditReview' is assigned a value but never used.","'ReviewContext' is defined but never used.","'farms' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getPigEdibles'. Either include it or remove the dependency array.",["232"],"'includeList' is assigned a value but never used.","'excludeList' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},"Update the dependencies array to be: [getEcoTips]",{"range":"247","text":"248"},"Update the dependencies array to be: [farmId, getFarmById]",{"range":"249","text":"250"},"Update the dependencies array to be: [getReviews]",{"range":"251","text":"252"},"Update the dependencies array to be: [getFarms]",{"range":"253","text":"254"},"Update the dependencies array to be: [getFarms, getReviewById, reviewId]",{"range":"255","text":"256"},"Update the dependencies array to be: [farmId, getFarmById, getFarms, getReviewById, reviewId]",{"range":"257","text":"258"},"Update the dependencies array to be: [getPigEdibles]",{"range":"259","text":"260"},[306,308],"[getEcoTips]",[1235,1237],"[farmId, getFarmById]",[1290,1292],"[getReviews]",[467,469],"[getFarms]",[1786,1788],"[getFarms, getReviewById, reviewId]",[1711,1713],"[farmId, getFarmById, getFarms, getReviewById, reviewId]",[359,361],"[getPigEdibles]"]