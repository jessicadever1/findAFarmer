[{"/Users/jessicadever/workspace/front_end/find-a-farmer/src/index.js":"1","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/ApplicationViews.js":"2","/Users/jessicadever/workspace/front_end/find-a-farmer/src/reportWebVitals.js":"3","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/Farms.js":"4","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/auth/Login.js":"5","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/auth/Register.js":"6","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/WelcomePage.js":"7","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/FarmProvider.js":"8","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/FarmList.js":"9","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/FarmCard.js":"10","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/FarmDetails.js":"11","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/header/HeaderCard.js":"12","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/reviews/ReviewProvider.js":"13","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/reviews/ReviewCard.js":"14"},{"size":326,"mtime":1611953826323,"results":"15","hashOfConfig":"16"},{"size":744,"mtime":1612216079945,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1611933646995,"results":"18","hashOfConfig":"16"},{"size":795,"mtime":1612197003105,"results":"19","hashOfConfig":"16"},{"size":2061,"mtime":1612233888747,"results":"20","hashOfConfig":"16"},{"size":3449,"mtime":1612233875457,"results":"21","hashOfConfig":"16"},{"size":501,"mtime":1612234271611,"results":"22","hashOfConfig":"16"},{"size":649,"mtime":1612216571332,"results":"23","hashOfConfig":"16"},{"size":885,"mtime":1612215163393,"results":"24","hashOfConfig":"16"},{"size":1202,"mtime":1612066096690,"results":"25","hashOfConfig":"16"},{"size":4855,"mtime":1612231878150,"results":"26","hashOfConfig":"16"},{"size":565,"mtime":1612066096691,"results":"27","hashOfConfig":"16"},{"size":840,"mtime":1612214335527,"results":"28","hashOfConfig":"16"},{"size":648,"mtime":1612199292579,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1k554lk",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/Users/jessicadever/workspace/front_end/find-a-farmer/src/index.js",[],["62","63"],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/ApplicationViews.js",["64"],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/reportWebVitals.js",[],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/Farms.js",[],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/auth/Login.js",["65"],"import React, { useRef } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport \"./Login.css\"\n\nexport const Login = props => {\n    const email = useRef()\n    const password = useRef()\n    const existDialog = useRef()\n    const history = useHistory()\n\n    const existingUserCheck = () => {\n        return fetch (`http://localhost:8014/users?email=${email.current.value}`)\n        .then(res => res.json())\n        .then(user => user.length ? user[0] : false)\n    }\n\n    const handleLogin = (e) => {\n        e.preventDefault()\n\n        existingUserCheck()\n            .then(exists => {\n                if (exists) {\n                    localStorage.setItem(\"find-a-farm_user\", exists.id)\n                    history.push(\"/farms\")\n                } else {\n                    existDialog.current.showModal()\n                }\n            })\n    }\n\n    return (\n        <section className=\"container--login\">\n            <dialog className=\"dialog dialog--auth\" ref={existDialog}>\n                <div>User does not exist</div>\n                <button className=\"button--close\" onClick={e => existDialog.current.close()}>Close</button>\n            </dialog>\n\n            <section className=\"userEntrance\">\n                <form className=\"form--login\" onSubmit={handleLogin}>\n                    <h2 className=\"form--heading\">Welcome Back!</h2>\n                    <fieldset>\n                        <label htmlFor=\"inputEmail\"> Email address </label>\n                        <input ref={email} type=\"email\"\n                            id=\"email\"\n                            className=\"form-control\"\n                            placeholder=\"Email address\"\n                            required autoFocus />\n                    </fieldset>\n                    <fieldset className=\"loginBtnFieldset\">\n                        <button className=\"loginBtn\" type=\"submit\" id=\"userLogin\">\n                            Log in\n                        </button>\n                    </fieldset>\n                </form>\n            </section>\n        </section>\n    )\n}","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/auth/Register.js",["66"],"import React, { useRef } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport \"./Login.css\"\n\nexport const Register = (props) => {\n    const firstName = useRef()\n    const lastName = useRef()\n    const email = useRef()\n    const verifyPassword = useRef()\n    const conflictDialog = useRef()\n    const history = useHistory()\n\n    const existingUserCheck = () => {\n        return fetch(`http://localhost:8014/users?email=${email.current.value}`)\n            .then(res => res.json())\n            .then(user => !!user.length)\n    }\n\n    const handleRegister = (e) => {\n        e.preventDefault()\n\n        existingUserCheck()\n            .then((userExists) => {\n                if (!userExists) {\n                    fetch(\"http://localhost:8014/users\", {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"application/json\"\n                        },\n                        body: JSON.stringify({\n                            email: email.current.value,\n                            name: `${firstName.current.value} ${lastName.current.value}`\n                        })\n                    })\n                    .then(res => res.json())\n                    .then(createdUser => {\n                        if (createdUser.hasOwnProperty(\"id\")) {\n                            localStorage.setItem(\"find-a-farm_user\", createdUser.id)\n                            history.push(\"/farms\")\n                        }\n                    })\n                }\n                else {\n                    conflictDialog.current.showModal()\n                }\n            })\n    }\n\n    return (\n        <section className=\"container--register\" style={{ textAlign: \"center\" }}>\n\n            <dialog className=\"dialog dialog--password\" ref={conflictDialog}>\n                <div>Account with that email address already exists</div>\n                <button className=\"button--close\" onClick={e => conflictDialog.current.close()}>Close</button>\n            </dialog>\n\n            <form className=\"form--login\" onSubmit={handleRegister}>\n                <section className=\"reg\">\n                <h2 className=\"h3 mb-3 font-weight-normal\">Get Started</h2>\n                    <section className=\"form--reg\">\n                        <fieldset>\n                            <label htmlFor=\"firstName\"> First Name </label>\n                            <input ref={firstName} type=\"text\" name=\"firstName\" className=\"form-control form-name\" placeholder=\"First name\" required autoFocus />\n                        </fieldset>\n                        <fieldset>\n                            <label htmlFor=\"lastName\"> Last Name </label>\n                            <input ref={lastName} type=\"text\" name=\"lastName\" className=\"form-control form-name\" placeholder=\"Last name\" required />\n                        </fieldset>\n                        <fieldset>\n                            <label htmlFor=\"inputEmail\"> Email address </label>\n                            <input ref={email} type=\"email\" name=\"email\" className=\"form-control\" placeholder=\"Email address\" required />\n                        </fieldset>\n                        <fieldset className=\"loginBtnFieldset\">\n                            <button className=\"loginBtn\" type=\"submit\"> Log in </button>\n                        </fieldset>\n                    </section>\n                </section>\n            </form>\n        </section>\n    )\n}","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/WelcomePage.js",["67"],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/FarmProvider.js",[],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/FarmList.js",["68","69","70"],"import React, { useContext, useEffect } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport { FarmCard } from \"./FarmCard\"\nimport { FarmContext } from \"./FarmProvider\"\nimport \"./Farm.css\"\nimport { ReviewContext } from \"../reviews/ReviewProvider\"\n\nexport const FarmList = () => {\n    const {farms, getFarms} = useContext(FarmContext)\n    const {reviews, getReviews } = useContext(ReviewContext)\n    \n    const history = useHistory()\n\n    useEffect(() => {   \n        getReviews()\n        .then(getFarms)\n    }, [])\n\n    return (\n        <div className=\"farms\">\n            {console.log(\"FarmList: Render\", farms)}\n            {\n                farms.map(farm => {\n                    const reviews = farms.map(f => f.id === farm.reviewId)\n                    return <FarmCard key={farm.id} farm={farm} review={reviews}/>\n            })\n            }\n        </div>\n    )\n}","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/FarmCard.js",[],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/FarmDetails.js",["71","72","73"],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/header/HeaderCard.js",[],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/reviews/ReviewProvider.js",[],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/reviews/ReviewCard.js",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":6,"column":10,"nodeType":"80","messageId":"81","endLine":6,"endColumn":20},{"ruleId":"78","severity":1,"message":"82","line":7,"column":11,"nodeType":"80","messageId":"81","endLine":7,"endColumn":19},{"ruleId":"78","severity":1,"message":"83","line":9,"column":11,"nodeType":"80","messageId":"81","endLine":9,"endColumn":25},{"ruleId":"78","severity":1,"message":"79","line":4,"column":10,"nodeType":"80","messageId":"81","endLine":4,"endColumn":20},{"ruleId":"78","severity":1,"message":"84","line":10,"column":12,"nodeType":"80","messageId":"81","endLine":10,"endColumn":19},{"ruleId":"78","severity":1,"message":"85","line":12,"column":11,"nodeType":"80","messageId":"81","endLine":12,"endColumn":18},{"ruleId":"86","severity":1,"message":"87","line":17,"column":8,"nodeType":"88","endLine":17,"endColumn":10,"suggestions":"89"},{"ruleId":"78","severity":1,"message":"90","line":2,"column":23,"nodeType":"80","messageId":"81","endLine":2,"endColumn":34},{"ruleId":"78","severity":1,"message":"85","line":14,"column":11,"nodeType":"80","messageId":"81","endLine":14,"endColumn":18},{"ruleId":"86","severity":1,"message":"91","line":22,"column":8,"nodeType":"88","endLine":22,"endColumn":10,"suggestions":"92"},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"no-unused-vars","'HeaderCard' is defined but never used.","Identifier","unusedVar","'password' is assigned a value but never used.","'verifyPassword' is assigned a value but never used.","'reviews' is assigned a value but never used.","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getFarms' and 'getReviews'. Either include them or remove the dependency array.","ArrayExpression",["95"],"'getFarmById' is defined but never used.","React Hook useEffect has missing dependencies: 'farmId' and 'getFarmById'. Either include them or remove the dependency array.",["96"],"no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},"Update the dependencies array to be: [getFarms, getReviews]",{"range":"101","text":"102"},"Update the dependencies array to be: [farmId, getFarmById]",{"range":"103","text":"104"},[524,526],"[getFarms, getReviews]",[681,683],"[farmId, getFarmById]"]