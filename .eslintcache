[{"/Users/jessicadever/workspace/front_end/find-a-farmer/src/index.js":"1","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/Farms.js":"2","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/WelcomePage.js":"3","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/ApplicationViews.js":"4","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/header/HeaderCard.js":"5","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/users/UserProvider.js":"6","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/reviews/ReviewForm.js":"7","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/reviews/ReviewProvider.js":"8","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/FarmProvider.js":"9","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/users/UserCard.js":"10","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/FarmDetails.js":"11","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/FarmList.js":"12","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/auth/Register.js":"13","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/auth/Login.js":"14","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/reviews/ReviewCard.js":"15","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/FarmCard.js":"16","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/AllFarmsBtn.js":"17","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/FarmFilter.js":"18","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/users/UserList.js":"19","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/reviews/ReviewEditForm.js":"20","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/reviews/ReviewBtns.js":"21"},{"size":326,"mtime":1611953826323,"results":"22","hashOfConfig":"23"},{"size":812,"mtime":1612894898136,"results":"24","hashOfConfig":"23"},{"size":605,"mtime":1612884571285,"results":"25","hashOfConfig":"23"},{"size":1391,"mtime":1612894898135,"results":"26","hashOfConfig":"23"},{"size":920,"mtime":1612894898137,"results":"27","hashOfConfig":"23"},{"size":876,"mtime":1612807102101,"results":"28","hashOfConfig":"23"},{"size":4668,"mtime":1612903895880,"results":"29","hashOfConfig":"23"},{"size":1840,"mtime":1612903895880,"results":"30","hashOfConfig":"23"},{"size":1132,"mtime":1612807102098,"results":"31","hashOfConfig":"23"},{"size":589,"mtime":1612807102100,"results":"32","hashOfConfig":"23"},{"size":6450,"mtime":1612905983501,"results":"33","hashOfConfig":"23"},{"size":997,"mtime":1612807102098,"results":"34","hashOfConfig":"23"},{"size":3747,"mtime":1612807102097,"results":"35","hashOfConfig":"23"},{"size":2387,"mtime":1612807102097,"results":"36","hashOfConfig":"23"},{"size":2172,"mtime":1612903895879,"results":"37","hashOfConfig":"23"},{"size":1612,"mtime":1612889102461,"results":"38","hashOfConfig":"23"},{"size":842,"mtime":1612807102097,"results":"39","hashOfConfig":"23"},{"size":1385,"mtime":1612807102098,"results":"40","hashOfConfig":"23"},{"size":670,"mtime":1612894898141,"results":"41","hashOfConfig":"23"},{"size":4972,"mtime":1612903895880,"results":"42","hashOfConfig":"23"},{"size":1300,"mtime":1612903895879,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1k554lk",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"46"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"/Users/jessicadever/workspace/front_end/find-a-farmer/src/index.js",[],["97","98"],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/Farms.js",[],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/WelcomePage.js",["99"],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/ApplicationViews.js",["100"],"import React from \"react\"\nimport { Route } from \"react-router-dom\"\nimport { FarmProvider } from \"./farm/FarmProvider\"\nimport { FarmList } from \"./farm/FarmList\"\nimport { FarmDetail } from \"./farm/FarmDetails\"\nimport { HeaderCard } from \"./header/HeaderCard\"\nimport { ReviewProvider } from \"./reviews/ReviewProvider\"\nimport { ReviewForm } from \"./reviews/ReviewForm\"\nimport { UserProvider } from \"./users/UserProvider\"\nimport { UserCard } from \"./users/UserCard\"\n\nexport const ApplicationViews = () => {\n    \n/* -------------------- To display the FarmList, Details and Forms on their individual URLs -------------------- */    \n\n    return (\n        <>\n\n        <UserProvider>\n            <ReviewProvider>\n                <FarmProvider>\n\n                    <Route exact path=\"/farms\">\n                        <FarmList />\n                    </Route>\n\n                    <Route exact path=\"/farms/detail/:farmId(\\d+)\">\n                        <FarmDetail />\n                    </Route>\n\n                    <Route exact path=\"/reviews/create/:farmId(\\d+)\">\n                        <ReviewForm />\n                    </Route>\n\n                </FarmProvider>\n            </ReviewProvider>\n        </UserProvider>\n        </>\n    )\n}","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/header/HeaderCard.js",["101"],"import React from \"react\"\nimport \"./Header.css\"\nimport Pig from '../images/Pig.png'\nimport {Link} from 'react-router-dom'\n\n/* -------------------- To give all pages a uniform header -------------------- */\n\nexport const HeaderCard = () => {\n    return (\n        <>\n        <header>\n        <Link to={`/welcome`}><button className=\"logOutBtn\">Log Out</button></Link>\n            <h1 className=\"header\">Find A Farmer</h1>\n            <h2 className=\"h2\">Where will you plop your slop?</h2>\n            <div className=\"centerDefaultImg\">\n                <div className=\"emptySpace\"></div>\n                <img className=\"profileDefault\" src={Pig} alt=\"default\"></img>\n                <div className=\"emptySpace\"></div>\n            </div>\n        </header>\n        </>\n    )\n}","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/users/UserProvider.js",[],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/reviews/ReviewForm.js",["102"],"import React, { useContext, useEffect, useState } from \"react\"\nimport { ReviewContext } from \"../reviews/ReviewProvider\"\nimport { FarmContext } from \"../farm/FarmProvider\"\nimport { useHistory, useParams } from \"react-router-dom\"\nimport \"./Review.css\"\n\n\nexport const ReviewForm = () => {\n\n/* -------------------- To have access to farms and reviews -------------------- */\n\n    const { addReview, getReviewById } = useContext(ReviewContext)\n    const { farms, getFarms, getFarmById } = useContext(FarmContext)\n\n/* -------------------- To access userId, and set userId to each review -------------------- */\n\n    const currentUser = localStorage.getItem(\"find-a-farm_user\")\n\n    const [review, setReview] = useState({\n        \"id\": 0,\n        \"userId\": currentUser,\n        \"farmId\": 0,\n        \"date\": \"\",\n        \"name\": \"\",\n        \"reviewText\": \"\",\n        \"farm\": \"\"\n    })\n\n/* -------------------- To have access individual farm that has been selected -------------------- */\n\n    const [farm, setFarm] = useState(\n        {}\n    )\n\n/* -------------------- Use the URL to set the farmId and reviewId -------------------- */\n\n    const { farmId } = useParams()\n    const { reviewId } = useParams()\n    const history = useHistory()\n\n/* -------------------- To use the farms and get the individual farms by the reviewId, and then to get specific farm -------------------- */\n\n    useEffect(() => {\n        getFarms().then(() => {\n            if (reviewId){\n                getReviewById(reviewId)\n                .then(review => {\n                    setReview(review)\n                })\n            } \n        })\n    }, [])\n\n    useEffect(() => {\n        getFarmById(farmId)\n        .then(farm => {\n            setFarm(farm)\n        })\n    }) \n\n/* -------------------- To capture and render the inputs to the form -------------------- */\n\n    const handleControlledInputChange = (event) => {\n        const newReview = { ...review }\n        let selectedVal = event.target.value\n        if (event.target.id.includes(\"Id\")) {\n            selectedVal = parseInt(selectedVal)\n        }\n        newReview[event.target.id] = selectedVal\n        setReview(newReview)\n    }\n\n/* -------------------- To save all of the reviews and then send the user back to the farm they reviewed -------------------- */\n\n    const handleClickSaveReview = (event) => {\n        event.preventDefault()\n        \n            addReview({\n                userId: parseInt(review.userId),\n                username: review.userId.username,\n                farmId: parseInt(farmId),\n                date: review.date,\n                name: review.name,\n                reviewText:review.reviewText,\n                farm: farm.name\n            })\n            .then(() => history.push(`/farms/detail/${farmId}`))\n        }\n    \n/* -------------------- The contents of the form -------------------- */\n\n    return (\n        <div className=\"formCenterDiv\">\n            <form className=\"reviewForm\" id={farms.id}>\n                <h2 className=\"reviewForm__title\">{farm.name} Review</h2>\n                <fieldset>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"name\">Review name:</label>\n                        <input type=\"text\" id=\"name\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Review name\" value={review.name}/>\n                    </div>\n                </fieldset>\n                <fieldset>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"date\">Date Visited:</label>\n                        <input type=\"date\" id=\"date\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"\" value={review.date}/>\n                    </div>\n                </fieldset>\n                <fieldset>\n                    <div className=\"form-group reviewTextArea\">\n                        <div className=\"\">\n                            <label htmlFor=\"reviewText\">Share your experience:</label>\n                        </div>\n                        <textarea type=\"textarea\" id=\"reviewText\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Tell us all about it!\" value={review.reviewText}/>\n                    </div>\n                </fieldset>\n                <div className=\"centerReviewSubmitBtn\">\n                    <button id={review.farmId} className=\"btn btn-primary\"\n                        onClick={ \n                            handleClickSaveReview\n                        }>\n                        Save Review\n                    </button>\n                </div>\n            </form> \n        </div>\n    )\n}","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/reviews/ReviewProvider.js",[],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/FarmProvider.js",[],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/users/UserCard.js",["103"],"import React from \"react\"\nimport \"./User.css\"\nimport userPicDefault from \"../images/user.png\"\n\nexport const UserCard = ( { user }) => {\n\n    return (\n        <section className=\"userCard\">\n            <h3 className=\"userName\">{user.username}</h3>\n        </section>\n    )\n}\n\n/*\nSaving for stretch:\nif (user.userPic === \"\") {\n        let defaultUserPic = userPicDefault\n        user.userPic = defaultUserPic\n    }\n<img src={user.userPic} alt=\"user profile picture\"></img>\n*/","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/FarmDetails.js",["104","105","106","107","108"],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/FarmList.js",["109","110"],"import React, { useContext, useEffect } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport { FarmCard } from \"./FarmCard\"\nimport { FarmContext } from \"./FarmProvider\"\nimport \"./Farm.css\"\nimport { ReviewContext } from \"../reviews/ReviewProvider\"\nimport { FarmFilter } from \"./FarmFilter\"\nimport { AllFarmsBtn } from \"./AllFarmsBtn\"\n\nexport const FarmList = () => {\n    const {farms, getFarms} = useContext(FarmContext)\n    const {reviews, getReviews } = useContext(ReviewContext)\n    \n    const history = useHistory()\n\n    useEffect(() => {   \n        getReviews()\n        .then(getFarms)\n    }, [])\n    \n    \n\n    return (\n        <>\n        <div className=\"farmFilter\">\n            <FarmFilter />\n            <AllFarmsBtn />\n        </div>\n        <div className=\"farms\">\n            {console.log(\"FarmList: Render\", farms)}\n            {\n                farms.map(farm => {\n                    const reviews = farms.map(f => f.id === farm.reviewId)\n                    return <FarmCard key={farm.id} farm={farm} review={reviews} />\n            })\n            }\n        </div>\n        </>\n    )\n}","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/auth/Register.js",["111"],"import React, { useRef } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport \"./Login.css\"\n\nexport const Register = (props) => {\n    const firstName = useRef()\n    const lastName = useRef()\n    const email = useRef()\n    const verifyPassword = useRef()\n    const conflictDialog = useRef()\n    const history = useHistory()\n\n    const existingUserCheck = () => {\n        return fetch(`http://localhost:8014/users?email=${email.current.value}`)\n            .then(res => res.json())\n            .then(user => !!user.length)\n    }\n\n    const handleRegister = (e) => {\n        e.preventDefault()\n\n        existingUserCheck()\n            .then((userExists) => {\n                if (!userExists) {\n                    fetch(\"http://localhost:8014/users\", {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"application/json\"\n                        },\n                        body: JSON.stringify({\n                            email: email.current.value,\n                            name: `${firstName.current.value} ${lastName.current.value}`\n                        })\n                    })\n                    .then(res => res.json())\n                    .then(createdUser => {\n                        if (createdUser.hasOwnProperty(\"id\")) {\n                            localStorage.setItem(\"find-a-farm_user\", createdUser.id)\n                            history.push(\"/farms\")\n                        }\n                    })\n                }\n                else {\n                    conflictDialog.current.showModal()\n                }\n            })\n    }\n\n    return (\n        <section className=\"container--register\" style={{ textAlign: \"center\" }}>\n\n            <dialog className=\"dialog dialog--password\" ref={conflictDialog}>\n                <div>Account with that email address already exists</div>\n                <button className=\"button--close\" onClick={e => conflictDialog.current.close()}>Close</button>\n            </dialog>\n\n            <form className=\"form--login\" onSubmit={handleRegister}>\n                <section className=\"reg\">\n                <h2 className=\"h3 mb-3 font-weight-normal\">Get Started</h2>\n                    <section className=\"form--reg\">\n                        <fieldset>\n                            <label htmlFor=\"firstName\"> First Name </label>\n                            <input ref={firstName} type=\"text\" name=\"firstName\" className=\"form-control form-name\" placeholder=\"First name\" required autoFocus />\n                        </fieldset>\n                        <fieldset>\n                            <label htmlFor=\"lastName\"> Last Name </label>\n                            <input ref={lastName} type=\"text\" name=\"lastName\" className=\"form-control form-name\" placeholder=\"Last name\" required />\n                        </fieldset>\n                        <fieldset>\n                            <label htmlFor=\"inputEmail\"> Email address </label>\n                            <input ref={email} type=\"email\" name=\"email\" className=\"form-control\" placeholder=\"Email address\" required />\n                        </fieldset>\n                        <fieldset className=\"loginBtnFieldset\">\n                            <button className=\"loginBtn\" type=\"submit\"> Log in </button>\n                        </fieldset>\n                    </section>\n                </section>\n            </form>\n        </section>\n    )\n}","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/auth/Login.js",["112","113"],"import React, { useRef } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport { Link } from \"react-router-dom\"\nimport \"./Login.css\"\n\nexport const Login = props => {\n    const email = useRef()\n    const password = useRef()\n    const existDialog = useRef()\n    const history = useHistory()\n\n    const existingUserCheck = () => {\n        return fetch (`http://localhost:8014/users?email=${email.current.value}`)\n        .then(res => res.json())\n        .then(user => user.length ? user[0] : false)\n    }\n\n    \n\n    const handleLogin = (e) => {\n        e.preventDefault()\n\n        existingUserCheck()\n            .then(exists => {\n                if (exists) {\n                    localStorage.setItem(\"find-a-farm_user\", exists.id)\n                    history.push(`/farms/${exists.id}`)\n                } else {\n                    existDialog.current.showModal()\n                }\n            })\n    }\n\n    return (\n        <section className=\"container--login\">\n            <dialog className=\"dialog dialog--auth\" ref={existDialog}>\n                <div>User does not exist</div>\n                <button className=\"button--close\" onClick={e => existDialog.current.close()}>Close</button>\n            </dialog>\n\n            <section className=\"userEntrance\">\n                <form className=\"form--login\" onSubmit={handleLogin}>\n                    <h2 className=\"form--heading\">Welcome Back!</h2>\n                    <fieldset>\n                        <label htmlFor=\"inputEmail\"> Email address </label>\n                        <input ref={email} type=\"email\"\n                            id=\"email\"\n                            className=\"form-control\"\n                            placeholder=\"Email address\"\n                            required autoFocus />\n                    </fieldset>\n                    <fieldset className=\"loginBtnFieldset\">\n                        <button className=\"loginBtnWB\" type=\"submit\" id=\"userLogin\">\n                            Log in\n                            </button>\n                        \n                    </fieldset>\n                </form>\n            </section>\n        </section>\n    )\n}","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/reviews/ReviewCard.js",["114","115","116","117","118","119"],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/FarmCard.js",["120","121"],"import React from \"react\"\nimport \"./Farm.css\"\nimport { Link } from \"react-router-dom\"\nimport {useHistory } from \"react-router-dom\"\n\nimport Pig from '../images/Pig.png'\nimport { ReviewContext } from \"../reviews/ReviewProvider\"\n\n/* -------------------- To always have a default farm picture available, if user doesn't have a farm pic -------------------- */\n\nexport const FarmCard = ( { farm, review } ) =>  {\n    if (farm.farmPic === \"\") {\n        let defaultFarmPic = Pig\n        farm.farmPic = defaultFarmPic\n    }\n    \n/* -------------------- The content of individual farm cards -------------------- */\n\n    return (\n        <section className=\"farm\">\n            <div className=\"farm__upperBox\">\n                <img src={farm.farmPic} width=\"100\" height=\"100\" alt=\"{farm.name} default pic\" className=\"farmPic\"></img>\n                <div className=\"farmCardRight\">   \n                    <section className=\"farm__info\">\n                        <h2 className=\"farm__name\">{farm.name}</h2>\n                        <div className=\"farm__street\">{farm.streetAddress}</div>\n                        <div className=\"farm__address\">{farm.city} {farm.state} {farm.zip}</div>\n                    </section>\n                </div>\n            </div>\n            <section className=\"farm__buttons\">\n                <button className=\"farmDetailsBtn\"><Link to={`/farms/detail/${farm.id}`}>See Details</Link></button>\n                <Link to={`/reviews/create/${farm.id}`}><button className=\"addRevBtn\">\n                    Add Review\n                </button></Link>\n            </section>\n        </section>\n    )\n\n}\n","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/AllFarmsBtn.js",["122","123","124"],"import \"./Farm.css\"\nimport { Link } from \"react-router-dom\"\nimport { FarmContext } from \"./FarmProvider\"\nimport React, { useContext, useEffect, useState } from \"react\"\n\nexport const AllFarmsBtn = () => {\n\n    const { getFarms } = useContext(FarmContext)\n    const [farms, setFarms] = useState([])\n    \n    const handleSeeAllFarmsClick = () => {\n            getFarms()\n            .then(setFarms)\n    }\n\n    return (\n        <div className=\"allFarmsBtnDiv\">\n            <button onClick={handleSeeAllFarmsClick} className=\"allFarmsBtn\">See All Farms</button>\n        </div>\n    )\n}","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/FarmFilter.js",[],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/users/UserList.js",["125"],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/reviews/ReviewEditForm.js",["126","127","128","129","130"],"import React, { useContext, useEffect, useState } from \"react\"\nimport { ReviewContext } from \"../reviews/ReviewProvider\"\nimport { FarmContext } from \"../farm/FarmProvider\"\nimport { useHistory, useParams } from \"react-router-dom\"\nimport \"./Review.css\"\n\n\nexport const ReviewEditForm = () => {\n\n/* -------------------- To have access to farms and reviews -------------------- */\n\n    const { getReviewById, editReview } = useContext(ReviewContext)\n    const { farms, getFarms, getFarmById } = useContext(FarmContext)\n\n/* -------------------- To access userId, and set userId to each review -------------------- */\n\n    const currentUser = localStorage.getItem(\"find-a-farm_user\")\n\n    const [review, setReview] = useState({\n        \"id\": 0,\n        \"userId\": currentUser,\n        \"farmId\": 0,\n        \"date\": \"\",\n        \"name\": \"\",\n        \"reviewText\": \"\",\n        \"farm\": \"\"\n    })\n\n    const [isLoading, setIsLoading] = useState(true)\n\n/* -------------------- To have access individual farm that has been selected -------------------- */\n\n    const [farm, setFarm] = useState(\n        {}\n    )\n\n/* -------------------- Use the URL to set the farmId and reviewId -------------------- */\n\n    const { reviewId } = useParams()\n    console.log(\"this is the reviewID\", reviewId)\n    const history = useHistory()\n\n/* -------------------- To use the farms and get the individual farms by the reviewId, and then to get specific farm -------------------- */\n\n    useEffect(() => {\n        getFarms().then(() => {\n            if (reviewId){\n            \n                getReviewById(parseInt(reviewId))\n                .then(review => {\n                    console.log(\"review\", review)\n                    setReview(review)\n                    \n                    // setIsLoading(false)\n                })\n            } else {\n                console.log(\"yup it's broken\")\n            }\n        })\n    }, [])\n\n/* -------------------- To capture and render the inputs to the form -------------------- */\n\n    const handleControlledInputChange = (event) => {\n        const newReview = { ...review }\n        let selectedVal = event.target.value\n        if (event.target.id.includes(\"Id\")) {\n            selectedVal = parseInt(selectedVal)\n        }\n        newReview[event.target.id] = selectedVal\n        setReview(newReview)\n    }\n\n/* -------------------- To save all of the reviews and then send the user back to the farm they reviewed -------------------- */\n\n    const handleClickSaveReview = () => {\n        // setIsLoading(true)\n\n        if (reviewId) {\n            editReview(\n                {\n                    userId: parseInt(review.userId),\n                    username: review.userId.username,\n                    farmId: parseInt(review.farm.id),\n                    date: review.date,\n                    name: review.name,\n                    reviewText:review.reviewText,\n                    farm: farm.name,\n                    id: review.id\n                }\n            ).then(() => history.push(`/farms/detail/${review.farmId}`))\n        } }\n    \n/* -------------------- The contents of the form -------------------- */\n\n    return (\n        <div className=\"formCenterDiv\">\n            <form className=\"reviewForm\" id={farms.id}>\n                <h2 className=\"reviewForm__title\">{farm.name} Review</h2>\n                <fieldset>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"name\">Review name:</label>\n                        <input type=\"text\" id=\"name\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Review name\" value={review.name}/>\n                    </div>\n                </fieldset>\n                <fieldset>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"date\">Date Visited:</label>\n                        <input type=\"date\" id=\"date\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"\" value={review.date}/>\n                    </div>\n                </fieldset>\n                <fieldset>\n                    <div className=\"form-group reviewTextArea\">\n                        <div className=\"\">\n                            <label htmlFor=\"reviewText\">Share your experience:</label>\n                        </div>\n                        <textarea type=\"textarea\" id=\"reviewText\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Tell us all about it!\" value={review.reviewText}/>\n                    </div>\n                </fieldset>\n                <div className=\"centerReviewSubmitBtn\">\n                    <button id={review.farm.id} className=\"btn btn-primary\"\n                        // disabled={isLoading}\n                        onClick={ event => {\n                            event.preventDefault()\n                            handleClickSaveReview()\n                        }}>\n                        {\"Save Review\"}\n                    </button>\n                </div>\n            </form> \n        </div>\n    )\n}","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/reviews/ReviewBtns.js",[],{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":4,"column":10,"nodeType":"137","messageId":"138","endLine":4,"endColumn":20},{"ruleId":"135","severity":1,"message":"136","line":6,"column":10,"nodeType":"137","messageId":"138","endLine":6,"endColumn":20},{"ruleId":"135","severity":1,"message":"139","line":4,"column":9,"nodeType":"137","messageId":"138","endLine":4,"endColumn":13},{"ruleId":"140","severity":1,"message":"141","line":56,"column":8,"nodeType":"142","endLine":56,"endColumn":10,"suggestions":"143"},{"ruleId":"135","severity":1,"message":"144","line":3,"column":8,"nodeType":"137","messageId":"138","endLine":3,"endColumn":22},{"ruleId":"135","severity":1,"message":"145","line":4,"column":21,"nodeType":"137","messageId":"138","endLine":4,"endColumn":31},{"ruleId":"135","severity":1,"message":"146","line":7,"column":8,"nodeType":"137","messageId":"138","endLine":7,"endColumn":12},{"ruleId":"135","severity":1,"message":"147","line":20,"column":9,"nodeType":"137","messageId":"138","endLine":20,"endColumn":15},{"ruleId":"140","severity":1,"message":"148","line":35,"column":8,"nodeType":"142","endLine":35,"endColumn":10,"suggestions":"149"},{"ruleId":"140","severity":1,"message":"150","line":39,"column":8,"nodeType":"142","endLine":39,"endColumn":10,"suggestions":"151"},{"ruleId":"135","severity":1,"message":"145","line":2,"column":10,"nodeType":"137","messageId":"138","endLine":2,"endColumn":20},{"ruleId":"140","severity":1,"message":"152","line":17,"column":8,"nodeType":"142","endLine":17,"endColumn":10,"suggestions":"153"},{"ruleId":"135","severity":1,"message":"154","line":9,"column":11,"nodeType":"137","messageId":"138","endLine":9,"endColumn":25},{"ruleId":"135","severity":1,"message":"139","line":3,"column":10,"nodeType":"137","messageId":"138","endLine":3,"endColumn":14},{"ruleId":"135","severity":1,"message":"155","line":8,"column":11,"nodeType":"137","messageId":"138","endLine":8,"endColumn":19},{"ruleId":"135","severity":1,"message":"156","line":1,"column":29,"nodeType":"137","messageId":"138","endLine":1,"endColumn":38},{"ruleId":"135","severity":1,"message":"157","line":1,"column":40,"nodeType":"137","messageId":"138","endLine":1,"endColumn":48},{"ruleId":"135","severity":1,"message":"158","line":4,"column":8,"nodeType":"137","messageId":"138","endLine":4,"endColumn":17},{"ruleId":"135","severity":1,"message":"159","line":5,"column":8,"nodeType":"137","messageId":"138","endLine":5,"endColumn":16},{"ruleId":"135","severity":1,"message":"160","line":20,"column":11,"nodeType":"137","messageId":"138","endLine":20,"endColumn":34},{"ruleId":"135","severity":1,"message":"161","line":30,"column":11,"nodeType":"137","messageId":"138","endLine":30,"endColumn":32},{"ruleId":"135","severity":1,"message":"145","line":4,"column":9,"nodeType":"137","messageId":"138","endLine":4,"endColumn":19},{"ruleId":"135","severity":1,"message":"162","line":7,"column":10,"nodeType":"137","messageId":"138","endLine":7,"endColumn":23},{"ruleId":"135","severity":1,"message":"139","line":2,"column":10,"nodeType":"137","messageId":"138","endLine":2,"endColumn":14},{"ruleId":"135","severity":1,"message":"156","line":4,"column":29,"nodeType":"137","messageId":"138","endLine":4,"endColumn":38},{"ruleId":"135","severity":1,"message":"163","line":11,"column":12,"nodeType":"137","messageId":"138","endLine":11,"endColumn":17},{"ruleId":"140","severity":1,"message":"164","line":14,"column":8,"nodeType":"142","endLine":14,"endColumn":10,"suggestions":"165"},{"ruleId":"135","severity":1,"message":"166","line":13,"column":30,"nodeType":"137","messageId":"138","endLine":13,"endColumn":41},{"ruleId":"135","severity":1,"message":"167","line":29,"column":12,"nodeType":"137","messageId":"138","endLine":29,"endColumn":21},{"ruleId":"135","severity":1,"message":"168","line":29,"column":23,"nodeType":"137","messageId":"138","endLine":29,"endColumn":35},{"ruleId":"135","severity":1,"message":"169","line":33,"column":18,"nodeType":"137","messageId":"138","endLine":33,"endColumn":25},{"ruleId":"140","severity":1,"message":"170","line":57,"column":8,"nodeType":"142","endLine":57,"endColumn":10,"suggestions":"171"},"no-native-reassign",["172"],"no-negated-in-lhs",["173"],"no-unused-vars","'HeaderCard' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'farmId', 'getFarmById', 'getFarms', 'getReviewById', and 'reviewId'. Either include them or remove the dependency array.","ArrayExpression",["174"],"'userPicDefault' is defined but never used.","'useHistory' is defined but never used.","'user' is defined but never used.","'userId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'farmId' and 'getFarmById'. Either include them or remove the dependency array.",["175"],"React Hook useEffect has a missing dependency: 'getReviews'. Either include it or remove the dependency array.",["176"],"React Hook useEffect has a missing dependency: 'getFarms'. Either include it or remove the dependency array.",["177"],"'verifyPassword' is assigned a value but never used.","'password' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'trashIcon' is defined but never used.","'editIcon' is defined but never used.","'handleClickDeleteReview' is assigned a value but never used.","'handleClickEditReview' is assigned a value but never used.","'ReviewContext' is defined but never used.","'farms' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getUsers'. Either include it or remove the dependency array.",["178"],"'getFarmById' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'setIsLoading' is assigned a value but never used.","'setFarm' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getFarms', 'getReviewById', and 'reviewId'. Either include them or remove the dependency array.",["179"],"no-global-assign","no-unsafe-negation",{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},"Update the dependencies array to be: [farmId, getFarmById, getFarms, getReviewById, reviewId]",{"range":"192","text":"193"},"Update the dependencies array to be: [farmId, getFarmById]",{"range":"194","text":"195"},"Update the dependencies array to be: [getReviews]",{"range":"196","text":"197"},"Update the dependencies array to be: [getFarms]",{"range":"198","text":"199"},"Update the dependencies array to be: [getUsers]",{"range":"200","text":"201"},"Update the dependencies array to be: [getFarms, getReviewById, reviewId]",{"range":"202","text":"203"},[1711,1713],"[farmId, getFarmById, getFarms, getReviewById, reviewId]",[1285,1287],"[farmId, getFarmById]",[1340,1342],"[getReviews]",[513,515],"[getFarms]",[402,404],"[getUsers]",[1786,1788],"[getFarms, getReviewById, reviewId]"]