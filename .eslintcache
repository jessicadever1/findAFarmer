[{"/Users/jessicadever/workspace/front_end/find-a-farmer/src/index.js":"1","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/Farms.js":"2","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/ApplicationViews.js":"3","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/WelcomePage.js":"4","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/header/HeaderCard.js":"5","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/reviews/ReviewProvider.js":"6","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/FarmProvider.js":"7","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/FarmList.js":"8","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/reviews/ReviewEditForm.js":"9","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/reviews/ReviewForm.js":"10","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/auth/Login.js":"11","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/FarmDetails.js":"12","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/users/UserProvider.js":"13","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/auth/Register.js":"14","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/AllFarmsBtn.js":"15","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/FarmFilter.js":"16","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/FarmCard.js":"17","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/reviews/ReviewCard.js":"18","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/reviews/ReviewBtns.js":"19","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/eco/EcoList.js":"20","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/eco/EcoProvider.js":"21","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/eco/EcoCard.js":"22"},{"size":326,"mtime":1611953826323,"results":"23","hashOfConfig":"24"},{"size":1052,"mtime":1612985851784,"results":"25","hashOfConfig":"24"},{"size":1391,"mtime":1612894898135,"results":"26","hashOfConfig":"24"},{"size":556,"mtime":1612981731025,"results":"27","hashOfConfig":"24"},{"size":920,"mtime":1612894898137,"results":"28","hashOfConfig":"24"},{"size":1840,"mtime":1613009657416,"results":"29","hashOfConfig":"24"},{"size":1132,"mtime":1612807102098,"results":"30","hashOfConfig":"24"},{"size":951,"mtime":1612981731027,"results":"31","hashOfConfig":"24"},{"size":4972,"mtime":1612903895880,"results":"32","hashOfConfig":"24"},{"size":4668,"mtime":1612903895880,"results":"33","hashOfConfig":"24"},{"size":2593,"mtime":1613009435133,"results":"34","hashOfConfig":"24"},{"size":6450,"mtime":1612905983501,"results":"35","hashOfConfig":"24"},{"size":876,"mtime":1612807102101,"results":"36","hashOfConfig":"24"},{"size":3747,"mtime":1612807102097,"results":"37","hashOfConfig":"24"},{"size":842,"mtime":1612807102097,"results":"38","hashOfConfig":"24"},{"size":1385,"mtime":1612807102098,"results":"39","hashOfConfig":"24"},{"size":1612,"mtime":1612889102461,"results":"40","hashOfConfig":"24"},{"size":2172,"mtime":1612903895879,"results":"41","hashOfConfig":"24"},{"size":1300,"mtime":1612903895879,"results":"42","hashOfConfig":"24"},{"size":747,"mtime":1613004645276,"results":"43","hashOfConfig":"24"},{"size":727,"mtime":1612981731026,"results":"44","hashOfConfig":"24"},{"size":365,"mtime":1613005799433,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1k554lk",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jessicadever/workspace/front_end/find-a-farmer/src/index.js",[],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/Farms.js",[],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/ApplicationViews.js",["100"],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/WelcomePage.js",[],["101","102"],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/header/HeaderCard.js",["103"],"import React from \"react\"\nimport \"./Header.css\"\nimport Pig from '../images/Pig.png'\nimport {Link, useHistory} from 'react-router-dom'\n\n/* -------------------- To give all pages a uniform header -------------------- */\n\nexport const HeaderCard = () => {\n\n    const history = useHistory()\n\n    const handleLogOutBtn = () => {\n        history.push(`/welcome`)\n        localStorage.clear()\n    }\n\n    return (\n        <>\n        <header>\n        <button onClick={handleLogOutBtn} className=\"logOutBtn\">Log Out</button>\n            <h1 className=\"header\">Find A Farmer</h1>\n            <h2 className=\"h2\">Where will you plop your slop?</h2>\n            <div className=\"centerDefaultImg\">\n                <div className=\"emptySpace\"></div>\n                <img className=\"profileDefault\" src={Pig} alt=\"default\"></img>\n                <div className=\"emptySpace\"></div>\n            </div>\n        </header>\n        </>\n    )\n}","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/reviews/ReviewProvider.js",[],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/FarmProvider.js",[],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/FarmList.js",["104"],"import React, { useContext, useEffect } from \"react\"\nimport { FarmCard } from \"./FarmCard\"\nimport { FarmContext } from \"./FarmProvider\"\nimport \"./Farm.css\"\nimport { FarmFilter } from \"./FarmFilter\"\nimport { AllFarmsBtn } from \"./AllFarmsBtn\"\n\nexport const FarmList = () => {\n\n/* -------------------- To have access to farms and reviews -------------------- */\n\n    const {farms, getFarms} = useContext(FarmContext)\n\n    useEffect(() => {   \n        getFarms()\n    }, [])\n    \n/* -------------------- To have access to the filter, see all farms btn & all of the farms -------------------- */    \n\n    return (\n        <>\n        <div className=\"farmFilter\">\n            <FarmFilter />\n            <AllFarmsBtn />\n        </div>\n        <div className=\"farms\">\n            \n            {\n                farms.map(farm => {\n                    return <FarmCard key={farm.id} farm={farm} />\n            })\n            }\n        </div>\n        </>\n    )\n}","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/reviews/ReviewEditForm.js",["105","106","107","108","109"],"import React, { useContext, useEffect, useState } from \"react\"\nimport { ReviewContext } from \"../reviews/ReviewProvider\"\nimport { FarmContext } from \"../farm/FarmProvider\"\nimport { useHistory, useParams } from \"react-router-dom\"\nimport \"./Review.css\"\n\n\nexport const ReviewEditForm = () => {\n\n/* -------------------- To have access to farms and reviews -------------------- */\n\n    const { getReviewById, editReview } = useContext(ReviewContext)\n    const { farms, getFarms, getFarmById } = useContext(FarmContext)\n\n/* -------------------- To access userId, and set userId to each review -------------------- */\n\n    const currentUser = localStorage.getItem(\"find-a-farm_user\")\n\n    const [review, setReview] = useState({\n        \"id\": 0,\n        \"userId\": currentUser,\n        \"farmId\": 0,\n        \"date\": \"\",\n        \"name\": \"\",\n        \"reviewText\": \"\",\n        \"farm\": \"\"\n    })\n\n    const [isLoading, setIsLoading] = useState(true)\n\n/* -------------------- To have access individual farm that has been selected -------------------- */\n\n    const [farm, setFarm] = useState(\n        {}\n    )\n\n/* -------------------- Use the URL to set the farmId and reviewId -------------------- */\n\n    const { reviewId } = useParams()\n    const history = useHistory()\n\n/* -------------------- To use the farms and get the individual farms by the reviewId, and then to get specific farm -------------------- */\n\n    useEffect(() => {\n        getFarms().then(() => {\n            if (reviewId){\n            \n                getReviewById(parseInt(reviewId))\n                .then(review => {\n                    console.log(\"review\", review)\n                    setReview(review)\n                })\n            } else {\n                console.log(\"yup it's broken\")\n            }\n        })\n    }, [])\n\n/* -------------------- To capture and render the inputs to the form -------------------- */\n\n    const handleControlledInputChange = (event) => {\n        const newReview = { ...review }\n        let selectedVal = event.target.value\n        if (event.target.id.includes(\"Id\")) {\n            selectedVal = parseInt(selectedVal)\n        }\n        newReview[event.target.id] = selectedVal\n        setReview(newReview)\n    }\n\n/* -------------------- To save all of the reviews and then send the user back to the farm they reviewed -------------------- */\n\n    const handleClickSaveReview = () => {\n        // setIsLoading(true)\n\n        if (reviewId) {\n            editReview(\n                {\n                    userId: parseInt(review.userId),\n                    username: review.userId.username,\n                    farmId: parseInt(review.farm.id),\n                    date: review.date,\n                    name: review.name,\n                    reviewText:review.reviewText,\n                    farm: farm.name,\n                    id: review.id\n                }\n            ).then(() => history.push(`/farms/detail/${review.farmId}`))\n        } }\n    \n/* -------------------- The contents of the form -------------------- */\n\n    return (\n        <div className=\"formCenterDiv\">\n            <form className=\"reviewForm\" id={farms.id}>\n                <h2 className=\"reviewForm__title\">{farm.name} Review</h2>\n                <fieldset>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"name\">Review name:</label>\n                        <input type=\"text\" id=\"name\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Review name\" value={review.name}/>\n                    </div>\n                </fieldset>\n                <fieldset>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"date\">Date Visited:</label>\n                        <input type=\"date\" id=\"date\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"\" value={review.date}/>\n                    </div>\n                </fieldset>\n                <fieldset>\n                    <div className=\"form-group reviewTextArea\">\n                        <div className=\"\">\n                            <label htmlFor=\"reviewText\">Share your experience:</label>\n                        </div>\n                        <textarea type=\"textarea\" id=\"reviewText\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Tell us all about it!\" value={review.reviewText}/>\n                    </div>\n                </fieldset>\n                <div className=\"centerReviewSubmitBtn\">\n                    <button id={review.farm.id} className=\"btn btn-primary\"\n                        // disabled={isLoading}\n                        onClick={ event => {\n                            event.preventDefault()\n                            handleClickSaveReview()\n                        }}>\n                        {\"Save Review\"}\n                    </button>\n                </div>\n            </form> \n        </div>\n    )\n}","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/reviews/ReviewForm.js",["110"],"import React, { useContext, useEffect, useState } from \"react\"\nimport { ReviewContext } from \"../reviews/ReviewProvider\"\nimport { FarmContext } from \"../farm/FarmProvider\"\nimport { useHistory, useParams } from \"react-router-dom\"\nimport \"./Review.css\"\n\n\nexport const ReviewForm = () => {\n\n/* -------------------- To have access to farms and reviews -------------------- */\n\n    const { addReview, getReviewById } = useContext(ReviewContext)\n    const { farms, getFarms, getFarmById } = useContext(FarmContext)\n\n/* -------------------- To access userId, and set userId to each review -------------------- */\n\n    const currentUser = localStorage.getItem(\"find-a-farm_user\")\n\n    const [review, setReview] = useState({\n        \"id\": 0,\n        \"userId\": currentUser,\n        \"farmId\": 0,\n        \"date\": \"\",\n        \"name\": \"\",\n        \"reviewText\": \"\",\n        \"farm\": \"\"\n    })\n\n/* -------------------- To have access individual farm that has been selected -------------------- */\n\n    const [farm, setFarm] = useState(\n        {}\n    )\n\n/* -------------------- Use the URL to set the farmId and reviewId -------------------- */\n\n    const { farmId } = useParams()\n    const { reviewId } = useParams()\n    const history = useHistory()\n\n/* -------------------- To use the farms and get the individual farms by the reviewId, and then to get specific farm -------------------- */\n\n    useEffect(() => {\n        getFarms().then(() => {\n            if (reviewId){\n                getReviewById(reviewId)\n                .then(review => {\n                    setReview(review)\n                })\n            } \n        })\n        getFarmById(farmId)\n        .then(farm => {\n            setFarm(farm)\n        })\n    }, [])\n\n/* -------------------- To capture and render the inputs to the form -------------------- */\n\n    const handleControlledInputChange = (event) => {\n        const newReview = { ...review }\n        let selectedVal = event.target.value\n        if (event.target.id.includes(\"Id\")) {\n            selectedVal = parseInt(selectedVal)\n        }\n        newReview[event.target.id] = selectedVal\n        setReview(newReview)\n    }\n\n/* -------------------- To save all of the reviews and then send the user back to the farm they reviewed -------------------- */\n\n    const handleClickSaveReview = (event) => {\n        event.preventDefault()\n        \n            addReview({\n                userId: parseInt(review.userId),\n                username: review.userId.username,\n                farmId: parseInt(farmId),\n                date: review.date,\n                name: review.name,\n                reviewText:review.reviewText,\n                farm: farm.name\n            })\n            .then(() => history.push(`/farms/detail/${farmId}`))\n        }\n    \n/* -------------------- The contents of the form -------------------- */\n\n    return (\n        <div className=\"formCenterDiv\">\n            <form className=\"reviewForm\" id={farms.id}>\n                <h2 className=\"reviewForm__title\">{farm.name} Review</h2>\n                <fieldset>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"name\">Review name:</label>\n                        <input type=\"text\" id=\"name\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Review name\" value={review.name}/>\n                    </div>\n                </fieldset>\n                <fieldset>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"date\">Date Visited:</label>\n                        <input type=\"date\" id=\"date\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"\" value={review.date}/>\n                    </div>\n                </fieldset>\n                <fieldset>\n                    <div className=\"form-group reviewTextArea\">\n                        <div className=\"\">\n                            <label htmlFor=\"reviewText\">Share your experience:</label>\n                        </div>\n                        <textarea type=\"textarea\" id=\"reviewText\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Tell us all about it!\" value={review.reviewText}/>\n                    </div>\n                </fieldset>\n                <div className=\"centerReviewSubmitBtn\">\n                    <button id={review.farmId} className=\"btn btn-primary\"\n                        onClick={ \n                            handleClickSaveReview\n                        }>\n                        Save Review\n                    </button>\n                </div>\n            </form> \n        </div>\n    )\n}","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/auth/Login.js",["111","112"],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/FarmDetails.js",["113","114","115","116","117"],"import React, { useContext, useEffect, useState } from \"react\"\nimport { FarmContext } from \"./FarmProvider\"\nimport \"./Farm.css\"\nimport { useParams, useHistory } from \"react-router-dom\"\nimport { Link } from \"react-router-dom\"\nimport Pig from \"../images/Pig.png\"\nimport user from \"../images/user.png\"\nimport { ReviewContext } from \"../reviews/ReviewProvider\"\nimport { ReviewCard } from \"../reviews/ReviewCard\"\n\n\nexport const FarmDetail = () => {\n\n/* -------------------- To have access to farms, reviews and the userId -------------------- */\n\n    const { getFarmById } = useContext(FarmContext)\n    const [ farm, setFarm ] = useState({})\n    const { reviews, getReviews } = useContext(ReviewContext)\n    const { farmId } = useParams()\n    let userId = localStorage.getItem(\"find-a-farm_user\")\n\n/* -------------------- To be able to see only the reviews associated with current farm -------------------- */\n\n    const currentFarmReviews = reviews.filter((currentReview) => {\n        return currentReview.farmId === parseInt(farmId)\n    } )\n\n/* -------------------- To get the current farm selected, and the reviews associated with it -------------------- */\n\n    useEffect(() => {\n        getFarmById(farmId)\n        .then((response) => {\n            setFarm(response)\n        })\n    }, [])\n\n    useEffect(() => {\n        getReviews()\n    }, [])\n\n/* -------------------- To make sure every farm detail has a default profile pic, if no profile pic exists -------------------- */\n\n    if (farm.farmPic === \"\") {\n        let defaultFarmPic = Pig\n        farm.farmPic = defaultFarmPic\n    }\n\n/* -------------------- The contents of all of the farm details for selected farm -------------------- */\n\n    return (\n        <section className=\"farm\">\n            <div className=\"farm__upperBox\">\n                <img src={farm.farmPic} alt=\"{farm.name} default pic\" className=\"farmPic\"></img>\n                <div className=\"farmCardRight\">   \n                    <section className=\"farm__info\">\n                        <h2 className=\"farm__name\">{farm.name}</h2>\n                        <div className=\"farm__street\">{farm.streetAddress}</div>\n                        <div className=\"farm__address\">{farm.city} {farm.state} {farm.zip}</div>\n                    </section>\n                </div>\n            </div>\n                <section className=\"farm__buttons\">\n                    <button className=\"farmDetailsBtn\"><Link className=\"a\" to={`/farms`}>Back to All Farms</Link></button>\n                    <button className=\"addReviewBtn\"><Link className=\"a\" to={`/reviews/create/${farm.id}`}>Add Review</Link></button>\n                </section>\n                        \n            <div>\n                <section className=\"farm__instructionAndLists\">\n                    <article className=\"farm__instructionsSection\">\n                        <h3>Instructions: </h3>\n                        <div className=\"farm__instructions\">{farm.instructions}</div>\n                    </article>\n                    <section className=\"includeExcludeDivs\">\n                        <div className=\"farm__includeList\">\n                            <h3 className=\"farm__include\">Include</h3>\n                            <ul>\n                                <li>Vegetables*</li>\n                                <li>Fruit*</li>\n                                <li>Grains</li>\n                                <li>Nuts & Seeds</li>\n                                <li>Prepared Food</li>\n                                <li>Vegetables*</li>\n                                <li>Fruit*</li>\n                                <li>Grains</li>\n                                <li>Nuts & Seeds</li>\n                                <li>Prepared Food</li>\n                                <li>Vegetables*</li>\n                                <li>Fruit*</li>\n                                <li>Grains</li>\n                                <li>Nuts & Seeds</li>\n                                <li>Prepared Food</li>\n                            </ul>\n                            <p>*See exclusions</p>\n                        </div>\n                        <div className=\"farm__excludeList\">\n                            <h3 className=\"farm__exclude\">Exclude</h3>\n                            <ul>\n                                <li>Raw Meat</li>\n                                <li>Human Remains</li>\n                                <li>Food Stickers</li>\n                                <li>Plastic</li>\n                                <li>Canned Beans</li>\n                                <li>Avocado (all parts)</li>\n                                <li>Cherries</li>\n                                <li>Chocolate</li>\n                                <li>Kale</li>\n                                <li>Raw Meat</li>\n                                <li>Human Remains</li>\n                                <li>Food Stickers</li>\n                                <li>Plastic</li>\n                                <li>Canned Beans</li>\n                                <li>Avocado (all parts)</li>\n                                <li>Cherries</li>\n                                <li>Chocolate</li>\n                                <li>Kale</li>\n                            </ul>\n                        </div>\n                    </section>\n                </section>\n                <article className=\"farm__reviews\">\n                    <h2 className=\"farm__reviewHeader\">Reviews</h2>\n                    <div className=\"reviews\">\n                        {\n                            currentFarmReviews.map(review => {\n                                \n                                return <ReviewCard key={review.id} farm={farm} review={review}/>\n                        })\n                        }\n                    </div>\n                </article>\n            </div>\n        </section>\n    )\n}\n\n/*\nSaving for farm__reviews, just in case:\n\n                    <div className=\"farm__reviewCard\">\n                        <img className=\"userDefaultPic\" src={userPic} alt=\"user default pic\"></img>\n                        <section className=\"farm__reviewInfo\">\n                            <h3 className=\"review__name\">{farm.review?.name}</h3>\n                            <div className=\"review__date\">{farm.review?.date}</div>\n                            <p className=\"review__reviewText\">{farm.review?.reviewText}</p>\n                        </section>\n                    </div>\n\n*/","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/users/UserProvider.js",[],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/auth/Register.js",["118"],"import React, { useRef } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport \"./Login.css\"\n\nexport const Register = (props) => {\n    const firstName = useRef()\n    const lastName = useRef()\n    const email = useRef()\n    const verifyPassword = useRef()\n    const conflictDialog = useRef()\n    const history = useHistory()\n\n/* -------------------- To check if user already exists -------------------- */\n\n    const existingUserCheck = () => {\n        return fetch(`http://localhost:8014/users?email=${email.current.value}`)\n            .then(res => res.json())\n            .then(user => !!user.length)\n    }\n\n/* -------------------- If user does not exist, then register the user and direct them to logged in page -------------------- */\n\n    const handleRegister = (e) => {\n        e.preventDefault()\n\n        existingUserCheck()\n            .then((userExists) => {\n                if (!userExists) {\n                    fetch(\"http://localhost:8014/users\", {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"application/json\"\n                        },\n                        body: JSON.stringify({\n                            email: email.current.value,\n                            name: `${firstName.current.value} ${lastName.current.value}`\n                        })\n                    })\n                    .then(res => res.json())\n                    .then(createdUser => {\n                        if (createdUser.hasOwnProperty(\"id\")) {\n                            localStorage.setItem(\"find-a-farm_user\", createdUser.id)\n                            history.push(\"/farms\")\n                        }\n                    })\n                }\n                else {\n                    conflictDialog.current.showModal()\n                }\n            })\n    }\n\n/* -------------------- The contents of the register user box -------------------- */\n\n    return (\n        <section className=\"container--register\" style={{ textAlign: \"center\" }}>\n\n            <dialog className=\"dialog dialog--password\" ref={conflictDialog}>\n                <div>Account with that email address already exists</div>\n                <button className=\"button--close\" onClick={e => conflictDialog.current.close()}>Close</button>\n            </dialog>\n\n            <form className=\"form--login\" onSubmit={handleRegister}>\n                <section className=\"reg\">\n                <h2 className=\"h3 mb-3 font-weight-normal\">Get Started</h2>\n                    <section className=\"form--reg\">\n                        <fieldset>\n                            <label htmlFor=\"firstName\"> First Name </label>\n                            <input ref={firstName} type=\"text\" name=\"firstName\" className=\"form-control form-name\" placeholder=\"First name\" required autoFocus />\n                        </fieldset>\n                        <fieldset>\n                            <label htmlFor=\"lastName\"> Last Name </label>\n                            <input ref={lastName} type=\"text\" name=\"lastName\" className=\"form-control form-name\" placeholder=\"Last name\" required />\n                        </fieldset>\n                        <fieldset>\n                            <label htmlFor=\"inputEmail\"> Email address </label>\n                            <input ref={email} type=\"email\" name=\"email\" className=\"form-control\" placeholder=\"Email address\" required />\n                        </fieldset>\n                        <fieldset className=\"loginBtnFieldset\">\n                            <button className=\"loginBtn\" type=\"submit\"> Log in </button>\n                        </fieldset>\n                    </section>\n                </section>\n            </form>\n        </section>\n    )\n}","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/AllFarmsBtn.js",["119","120","121"],"import \"./Farm.css\"\nimport { Link } from \"react-router-dom\"\nimport { FarmContext } from \"./FarmProvider\"\nimport React, { useContext, useEffect, useState } from \"react\"\n\nexport const AllFarmsBtn = () => {\n\n/* -------------------- To be able to work with all of the farm data -------------------- */\n\n    const { getFarms } = useContext(FarmContext)\n    const [farms, setFarms] = useState([])\n    \n/* -------------------- To render all of the farms, if user has filtered farms -------------------- */\n\n    const handleSeeAllFarmsClick = () => {\n            getFarms()\n            .then(setFarms)\n    }\n\n/* -------------------- The farm button -------------------- */\n\n    return (\n        <div className=\"allFarmsBtnDiv\">\n            <button onClick={handleSeeAllFarmsClick} className=\"allFarmsBtn\">See All Farms</button>\n        </div>\n    )\n}","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/FarmFilter.js",[],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/farm/FarmCard.js",["122","123"],"import React from \"react\"\nimport \"./Farm.css\"\nimport { Link } from \"react-router-dom\"\nimport {useHistory } from \"react-router-dom\"\n\nimport Pig from '../images/Pig.png'\nimport { ReviewContext } from \"../reviews/ReviewProvider\"\n\n/* -------------------- To always have a default farm picture available, if user doesn't have a farm pic -------------------- */\n\nexport const FarmCard = ( { farm, review } ) =>  {\n    if (farm.farmPic === \"\") {\n        let defaultFarmPic = Pig\n        farm.farmPic = defaultFarmPic\n    }\n    \n/* -------------------- The content of individual farm cards -------------------- */\n\n    return (\n        <section className=\"farm\">\n            <div className=\"farm__upperBox\">\n                <img src={farm.farmPic} width=\"100\" height=\"100\" alt=\"{farm.name} default pic\" className=\"farmPic\"></img>\n                <div className=\"farmCardRight\">   \n                    <section className=\"farm__info\">\n                        <h2 className=\"farm__name\">{farm.name}</h2>\n                        <div className=\"farm__street\">{farm.streetAddress}</div>\n                        <div className=\"farm__address\">{farm.city} {farm.state} {farm.zip}</div>\n                    </section>\n                </div>\n            </div>\n            <section className=\"farm__buttons\">\n                <button className=\"farmDetailsBtn\"><Link to={`/farms/detail/${farm.id}`}>See Details</Link></button>\n                <Link to={`/reviews/create/${farm.id}`}><button className=\"addRevBtn\">\n                    Add Review\n                </button></Link>\n            </section>\n        </section>\n    )\n\n}\n","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/reviews/ReviewCard.js",["124","125","126","127","128","129"],"import React, { useContext, useEffect, useState } from \"react\"\nimport \"./Review.css\"\nimport userPicture from \"../images/user.png\"\nimport trashIcon from \"../images/trash.png\"\nimport editIcon from \"../images/editIcon.png\"\nimport { ReviewContext } from \"./ReviewProvider\"\nimport { useHistory } from \"react-router-dom\"\nimport { ReviewBtns } from \"./ReviewBtns\"\n\nexport const ReviewCard = ({ review, user, farm }) => {\n\n/* -------------------- Provide reviews for each farm, and delete them upon click -------------------- */\n\n    const { deleteReview } = useContext(ReviewContext)\n\n    const userPic = userPicture\n    const currentUser = parseInt(localStorage.getItem(\"find-a-farm_user\"))\n    const history = useHistory()\n\n    const handleClickDeleteReview = () => {\n        \n        if (currentUser === review.userId) {\n            deleteReview(review.id)\n            .then(() => {\n                history.push(`/farms/detail/${farm.id}`)\n            })\n        }\n    }\n\n    const handleClickEditReview = () => {\n        if (currentUser === review.userId) {\n            history.push(`/reviews/edit/${review.id}`)\n        }\n    }\n\n    const hideButtons = () => {\n        if (currentUser === review.userId) {\n            return (\n                <>\n                    <ReviewBtns key={review.id} review={review} user={user} farm={farm} />\n                </>\n            )\n        }\n    } \n\n/* -------------------- Contents of individual reviews -------------------- */\n\n    return (\n        <article className=\"review\">\n            <img className=\"reviewerProfilePic\" src={userPic} alt=\"user default pic\"></img>\n            \n            <section className=\"review__userInfo\">\n                <div className=\"reviewBy\">\n                    <h3 className=\"reviewUsername\">{review.user.username}: </h3>\n                    <h3 className=\"review__name\">{review.name}</h3>\n                </div>\n                <div className=\"review__date\">{review.date}</div>\n                <p className=\"review__reviewText\">{review.reviewText}</p>\n            </section>\n            <div className=\"reviewBtnsDiv\">\n                {hideButtons()}\n            </div>\n        </article>\n    )\n}","/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/reviews/ReviewBtns.js",[],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/eco/EcoList.js",["130","131"],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/eco/EcoProvider.js",[],"/Users/jessicadever/workspace/front_end/find-a-farmer/src/components/eco/EcoCard.js",[],{"ruleId":"132","severity":1,"message":"133","line":6,"column":10,"nodeType":"134","messageId":"135","endLine":6,"endColumn":20},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"132","severity":1,"message":"140","line":4,"column":9,"nodeType":"134","messageId":"135","endLine":4,"endColumn":13},{"ruleId":"141","severity":1,"message":"142","line":16,"column":8,"nodeType":"143","endLine":16,"endColumn":10,"suggestions":"144"},{"ruleId":"132","severity":1,"message":"145","line":13,"column":30,"nodeType":"134","messageId":"135","endLine":13,"endColumn":41},{"ruleId":"132","severity":1,"message":"146","line":29,"column":12,"nodeType":"134","messageId":"135","endLine":29,"endColumn":21},{"ruleId":"132","severity":1,"message":"147","line":29,"column":23,"nodeType":"134","messageId":"135","endLine":29,"endColumn":35},{"ruleId":"132","severity":1,"message":"148","line":33,"column":18,"nodeType":"134","messageId":"135","endLine":33,"endColumn":25},{"ruleId":"141","severity":1,"message":"149","line":57,"column":8,"nodeType":"143","endLine":57,"endColumn":10,"suggestions":"150"},{"ruleId":"141","severity":1,"message":"151","line":56,"column":8,"nodeType":"143","endLine":56,"endColumn":10,"suggestions":"152"},{"ruleId":"132","severity":1,"message":"140","line":3,"column":10,"nodeType":"134","messageId":"135","endLine":3,"endColumn":14},{"ruleId":"132","severity":1,"message":"153","line":8,"column":11,"nodeType":"134","messageId":"135","endLine":8,"endColumn":19},{"ruleId":"132","severity":1,"message":"154","line":4,"column":21,"nodeType":"134","messageId":"135","endLine":4,"endColumn":31},{"ruleId":"132","severity":1,"message":"155","line":7,"column":8,"nodeType":"134","messageId":"135","endLine":7,"endColumn":12},{"ruleId":"132","severity":1,"message":"156","line":20,"column":9,"nodeType":"134","messageId":"135","endLine":20,"endColumn":15},{"ruleId":"141","severity":1,"message":"157","line":35,"column":8,"nodeType":"143","endLine":35,"endColumn":10,"suggestions":"158"},{"ruleId":"141","severity":1,"message":"159","line":39,"column":8,"nodeType":"143","endLine":39,"endColumn":10,"suggestions":"160"},{"ruleId":"132","severity":1,"message":"161","line":9,"column":11,"nodeType":"134","messageId":"135","endLine":9,"endColumn":25},{"ruleId":"132","severity":1,"message":"140","line":2,"column":10,"nodeType":"134","messageId":"135","endLine":2,"endColumn":14},{"ruleId":"132","severity":1,"message":"162","line":4,"column":29,"nodeType":"134","messageId":"135","endLine":4,"endColumn":38},{"ruleId":"132","severity":1,"message":"163","line":11,"column":12,"nodeType":"134","messageId":"135","endLine":11,"endColumn":17},{"ruleId":"132","severity":1,"message":"154","line":4,"column":9,"nodeType":"134","messageId":"135","endLine":4,"endColumn":19},{"ruleId":"132","severity":1,"message":"164","line":7,"column":10,"nodeType":"134","messageId":"135","endLine":7,"endColumn":23},{"ruleId":"132","severity":1,"message":"162","line":1,"column":29,"nodeType":"134","messageId":"135","endLine":1,"endColumn":38},{"ruleId":"132","severity":1,"message":"165","line":1,"column":40,"nodeType":"134","messageId":"135","endLine":1,"endColumn":48},{"ruleId":"132","severity":1,"message":"166","line":4,"column":8,"nodeType":"134","messageId":"135","endLine":4,"endColumn":17},{"ruleId":"132","severity":1,"message":"167","line":5,"column":8,"nodeType":"134","messageId":"135","endLine":5,"endColumn":16},{"ruleId":"132","severity":1,"message":"168","line":20,"column":11,"nodeType":"134","messageId":"135","endLine":20,"endColumn":34},{"ruleId":"132","severity":1,"message":"169","line":30,"column":11,"nodeType":"134","messageId":"135","endLine":30,"endColumn":32},{"ruleId":"132","severity":1,"message":"165","line":1,"column":40,"nodeType":"134","messageId":"135","endLine":1,"endColumn":48},{"ruleId":"141","severity":1,"message":"170","line":12,"column":8,"nodeType":"143","endLine":12,"endColumn":10,"suggestions":"171"},"no-unused-vars","'HeaderCard' is defined but never used.","Identifier","unusedVar","no-native-reassign",["172"],"no-negated-in-lhs",["173"],"'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getFarms'. Either include it or remove the dependency array.","ArrayExpression",["174"],"'getFarmById' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'setIsLoading' is assigned a value but never used.","'setFarm' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getFarms', 'getReviewById', and 'reviewId'. Either include them or remove the dependency array.",["175"],"React Hook useEffect has missing dependencies: 'farmId', 'getFarmById', 'getFarms', 'getReviewById', and 'reviewId'. Either include them or remove the dependency array.",["176"],"'password' is assigned a value but never used.","'useHistory' is defined but never used.","'user' is defined but never used.","'userId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'farmId' and 'getFarmById'. Either include them or remove the dependency array.",["177"],"React Hook useEffect has a missing dependency: 'getReviews'. Either include it or remove the dependency array.",["178"],"'verifyPassword' is assigned a value but never used.","'useEffect' is defined but never used.","'farms' is assigned a value but never used.","'ReviewContext' is defined but never used.","'useState' is defined but never used.","'trashIcon' is defined but never used.","'editIcon' is defined but never used.","'handleClickDeleteReview' is assigned a value but never used.","'handleClickEditReview' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getEcoTips'. Either include it or remove the dependency array.",["179"],"no-global-assign","no-unsafe-negation",{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},"Update the dependencies array to be: [getFarms]",{"range":"192","text":"193"},"Update the dependencies array to be: [getFarms, getReviewById, reviewId]",{"range":"194","text":"195"},"Update the dependencies array to be: [farmId, getFarmById, getFarms, getReviewById, reviewId]",{"range":"196","text":"197"},"Update the dependencies array to be: [farmId, getFarmById]",{"range":"198","text":"199"},"Update the dependencies array to be: [getReviews]",{"range":"200","text":"201"},"Update the dependencies array to be: [getEcoTips]",{"range":"202","text":"203"},[467,469],"[getFarms]",[1786,1788],"[getFarms, getReviewById, reviewId]",[1711,1713],"[farmId, getFarmById, getFarms, getReviewById, reviewId]",[1285,1287],"[farmId, getFarmById]",[1340,1342],"[getReviews]",[306,308],"[getEcoTips]"]